{"mappings":"4nBAAA,IAAAA,EAAAC,EAAA,S,uCAwBO,MAAMC,EAAaC,OAAOC,KAC/BA,EAAIC,MACJA,EAAKC,WACLA,EAAUC,aACVA,MAEA,MAAMC,OACkB,IAAfF,EACHA,QACM,EAAAG,EAAAC,eAAc,C,aAAEH,IACtBI,EAAUC,KAAKC,UAAU,C,KAAET,E,MAAMC,IACjCS,EAA+B,CACnCC,KAAMf,EAAAgB,KAAKC,S,QACXN,EACAO,KAAM,IAEFC,GAAc,EAAAC,EAAAC,yBAAwB,C,cAC1CP,EACAR,WAAYE,IAGd,IACE,MAAMc,GAAkB,EAAAC,EAAAC,UAASL,SAC3BM,QAAQC,IAAIJ,EAOpB,CANE,MAAOK,GACP,MAAMC,EAAU,+BAChBC,QAAQF,MAAMC,EAASD,GACvBG,WAAWC,MACT,oEAEJ,GAgCFD,WAAWE,WAAa9B,EACxB4B,WAAWG,WA1Be9B,OAAO+B,UAAEA,KAC1B,IAAIT,SAAiB,CAACU,EAASC,MACd,EAAAb,EAAAc,YAAW,CAC/BC,QAAS,CACP,CACEC,MAAO,CAACvC,EAAAgB,KAAKC,UACbuB,QAAS,CAACN,KAGdO,QAAUC,IACR,IACE,MAAMC,GAAU,EAAAvB,EAAAwB,qBAAoB,C,MAAEF,IAGtCP,EAAQQ,EAGV,CAFE,MAAOhB,GACPE,QAAQF,MAAM,2CAA4CA,EAC5D,KAIJkB,WAAWT,EAAQ,O,IClFvBnC,EAAA,S","sources":["src/nostr/profiles.ts","src/nostr/index.ts"],"sourcesContent":["import {\n  Event,\n  getEventHash,\n  getPublicKey as getPublicKeyFromPrivateKey,\n  Kind,\n  signEvent,\n} from \"nostr-tools\";\nimport { MaybeLocalStorage, Profile, UnsignedEvent } from \"../types\";\nimport { getPrivateKey } from \"./keys\";\nimport { _publish, _subscribe } from \"./relays\";\nimport {\n  dateToUnix,\n  getProfileFromEvent,\n  signEventWithPrivateKey,\n} from \"./utils\";\n\ntype SetProfileParams = {\n  /** The user's name to be sent to all relays */\n  name: string;\n  /** A longer string that may (later) be shown on the user's profile page */\n  about: string;\n  /** The private key of the user, optionally fetched from localStorage */\n  privateKey?: string;\n} & MaybeLocalStorage;\nexport const setProfile = async ({\n  name,\n  about,\n  privateKey,\n  localStorage,\n}: SetProfileParams) => {\n  const key =\n    typeof privateKey !== \"undefined\"\n      ? privateKey\n      : await getPrivateKey({ localStorage });\n  const content = JSON.stringify({ name, about });\n  const unsignedEvent: UnsignedEvent = {\n    kind: Kind.Metadata,\n    content,\n    tags: [],\n  };\n  const signedEvent = signEventWithPrivateKey({\n    unsignedEvent,\n    privateKey: key,\n  });\n  // TODO - We should probably await here so that this only resolves after successfully publishing the event\n  try {\n    const publishPromises = _publish(signedEvent);\n    await Promise.all(publishPromises);\n  } catch (error) {\n    const message = \"#mkox3R Error saving profile\";\n    console.error(message, error);\n    globalThis.alert(\n      \"There was an error saving your profile. Please try again. #sbX20d\"\n    );\n  }\n};\n\ntype GetProfileParams = {\n  /** The public key of the user to fetch their profile */\n  publicKey: string;\n};\nexport const getProfile = async ({ publicKey }: GetProfileParams) => {\n  return new Promise<Profile>((resolve, reject) => {\n    const subscriptions = _subscribe({\n      filters: [\n        {\n          kinds: [Kind.Metadata],\n          authors: [publicKey],\n        },\n      ],\n      onEvent: (event) => {\n        try {\n          const profile = getProfileFromEvent({ event });\n          // NOTE: This will be called multiple times, but any calls after the\n          // first are ignored\n          resolve(profile);\n        } catch (error) {\n          console.error(\"#P0haKt Failed to get profile from event\", error);\n        }\n      },\n    });\n    // Timeout after 2s. This is a no-op if the promise already resolved above.\n    setTimeout(reject, 2e3);\n  });\n};\n\nglobalThis.setProfile = setProfile;\nglobalThis.getProfile = getProfile;\n","export { getPrivateKey, getPublicKey, setPrivateKey } from \"./keys\";\nexport { createNote } from \"./notes\";\nexport { getProfile, setProfile } from \"./profiles\";\nexport { getRelays, setRelays } from \"./relays\";\nexport { subscribe } from \"./subscribe\";\n"],"names":["$mdmCO","parcelRequire","$5ee56d9107124990$export$8a934fe97fe14fc","async","name","about","privateKey","localStorage","key","$lsWS8","getPrivateKey","content","JSON","stringify","unsignedEvent","kind","Kind","Metadata","tags","signedEvent","$cscoP","signEventWithPrivateKey","publishPromises","$jktzu","_publish","Promise","all","error","message","console","globalThis","alert","setProfile","getProfile","publicKey","resolve","reject","_subscribe","filters","kinds","authors","onEvent","event","profile","getProfileFromEvent","setTimeout"],"version":3,"file":"index.10cb81ba.js.map"}