{"mappings":"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","sources":["src/nostr/index.ts","src/nostr/relays.ts","node_modules/nostr-tools/lib/nostr.esm.js","node_modules/@noble/secp256k1/lib/esm/index.js","node_modules/nostr-tools/node_modules/@noble/hashes/sha256.js","node_modules/nostr-tools/node_modules/@noble/hashes/_sha2.js","node_modules/nostr-tools/node_modules/@noble/hashes/utils.js","node_modules/nostr-tools/node_modules/@noble/hashes/cryptoBrowser.js","node_modules/@scure/base/lib/esm/index.js","node_modules/@scure/bip39/wordlists/english.js","node_modules/@scure/bip39/index.js","node_modules/@noble/hashes/src/_assert.ts","node_modules/@noble/hashes/src/pbkdf2.ts","node_modules/@noble/hashes/src/hmac.ts","node_modules/@noble/hashes/src/utils.ts","node_modules/@noble/hashes/src/cryptoBrowser.ts","node_modules/@noble/hashes/src/sha256.ts","node_modules/@noble/hashes/src/_sha2.ts","node_modules/@noble/hashes/src/sha512.ts","node_modules/@noble/hashes/src/_u64.ts","node_modules/@scure/bip32/index.ts","node_modules/@noble/hashes/src/ripemd160.ts","node_modules/nostr-tools/node_modules/@noble/hashes/hmac.js","src/constants.ts","src/nostr/keys.ts","src/nostr/notes.ts","src/nostr/utils.ts","src/nostr/profiles.ts","src/nostr/subscribe.ts"],"sourcesContent":["import { createRelays } from \"./relays\";\n\nexport { getPrivateKey, getPublicKey, setPrivateKey } from \"./keys\";\nexport { createNote } from \"./notes\";\nexport { subscribeAndGetProfile, setProfile } from \"./profiles\";\nexport { getRelays, setRelays } from \"./relays\";\nexport { subscribe } from \"./subscribe\";\n\ncreateRelays();\n","import { Sub, relayInit, Relay, Event, Filter } from \"nostr-tools\";\nimport { DEFAULT_RELAYS, RELAYS_STORAGE_KEY } from \"../constants\";\nimport { MaybeLocalStorage, NostrEvent } from \"../types\";\n\nconst relays: Relay[] = [];\nglobalThis.relays = relays;\n\n/**\n * Get the list of relays we're connecting to\n */\nexport const getRelays = async ({\n  localStorage = globalThis.localStorage,\n}: MaybeLocalStorage = {}): Promise<string[]> => {\n  const relaysJSONMaybe = localStorage.getItem(RELAYS_STORAGE_KEY);\n  if (relaysJSONMaybe === null || relaysJSONMaybe.length === 0) {\n    throw new Error(\"#we8Qt4 No relays configured\");\n  }\n  try {\n    const relays = JSON.parse(relaysJSONMaybe);\n    if (!Array.isArray(relays)) {\n      throw new Error(\"#kSt3oN Relays is not an array of relays\");\n    }\n    return relays as string[];\n  } catch (error) {\n    console.error(\"#TKE6Vm Error during JSON.parse()\", error);\n    throw error;\n  }\n};\n\nexport const hasRelays = async ({\n  localStorage = globalThis.localStorage,\n}: MaybeLocalStorage = {}): Promise<boolean> => {\n  const relaysJson = localStorage.getItem(RELAYS_STORAGE_KEY);\n  if (relaysJson === null) {\n    return false;\n  }\n  try {\n    const relays = JSON.parse(relaysJson);\n    if (Array.isArray(relays)) {\n      return true;\n    }\n    return false;\n  } catch {\n    return false;\n  }\n  return true;\n};\n\ntype SetRelaysParams = {\n  /** The relay URLs. NOTE: This overwrites ALL existing relays. */\n  relays: string[];\n};\nexport const setRelays = async ({\n  relays,\n  localStorage = globalThis.localStorage,\n}: SetRelaysParams & MaybeLocalStorage): Promise<void> => {\n  const relaysString = JSON.stringify(relays);\n  localStorage.setItem(RELAYS_STORAGE_KEY, relaysString);\n  return;\n};\n\nexport const _initRelays = async ({\n  urls = [],\n}: { urls?: string[] } = {}): Promise<void> => {\n  // Ensure this is only invoked once\n  if (relays.length > 0) {\n    return;\n  }\n\n  // Use the result from `getRelays()` if `urls` is not provided\n  const realUrls = urls.length === 0 ? await getRelays() : urls;\n\n  const connectionPromises = realUrls.map(async (url) => {\n    const relay = relayInit(url);\n    try {\n      await relay.connect();\n    } catch (error) {\n      console.error(\"#b9aLfB Connecting to relay failed\", relay.url, error);\n      return;\n    }\n    relays.push(relay);\n  });\n\n  await Promise.all(connectionPromises);\n\n  if (relays.length === 0) {\n    console.error(\"#qDRSs5 All relays failed to connect\");\n    globalThis.alert(\n      \"Error: All relays failed to connect. Please wait a minute and reload.\"\n    );\n  }\n};\n\nexport const _publish = (event: Event): Promise<void>[] => {\n  const publishPromises = relays.map((relay) => {\n    return new Promise<void>((resolve, reject) => {\n      const pub = relay.publish(event);\n      pub.on(\"ok\", () => resolve());\n      pub.on(\"failed\", (reason) => reject(`${relay.url} - ${reason}`));\n    });\n  });\n  return publishPromises;\n};\n\ntype SubscribeParams = {\n  filters: Filter[];\n  onEvent: (event: NostrEvent) => void;\n};\nexport const _subscribe = ({\n  filters,\n  onEvent,\n}: SubscribeParams): Promise<Sub>[] => {\n  const subscriptions = relays.map(\n    (relay) =>\n      new Promise<Sub>((resolve, reject) => {\n        const subscription = relay.sub(filters);\n        subscription.on(\"event\", onEvent);\n        subscription.on(\"eose\", () => {\n          resolve(subscription);\n        });\n      })\n  );\n\n  return subscriptions;\n};\n\nexport const createRelays = async () => {\n  const relaysInstalled = await hasRelays();\n  if (!relaysInstalled) {\n    await setRelays({ relays: DEFAULT_RELAYS });\n  }\n};\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// keys.ts\nimport * as secp256k1 from \"@noble/secp256k1\";\nfunction generatePrivateKey() {\n  return secp256k1.utils.bytesToHex(secp256k1.utils.randomPrivateKey());\n}\nfunction getPublicKey(privateKey) {\n  return secp256k1.utils.bytesToHex(secp256k1.schnorr.getPublicKey(privateKey));\n}\n\n// event.ts\nimport * as secp256k12 from \"@noble/secp256k1\";\nimport { sha256 } from \"@noble/hashes/sha256\";\n\n// utils.ts\nvar utils_exports = {};\n__export(utils_exports, {\n  insertEventIntoAscendingList: () => insertEventIntoAscendingList,\n  insertEventIntoDescendingList: () => insertEventIntoDescendingList,\n  utf8Decoder: () => utf8Decoder,\n  utf8Encoder: () => utf8Encoder\n});\nvar utf8Decoder = new TextDecoder(\"utf-8\");\nvar utf8Encoder = new TextEncoder();\nfunction insertEventIntoDescendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at < sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at >= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at > event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at < event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\nfunction insertEventIntoAscendingList(sortedArray, event) {\n  let start = 0;\n  let end = sortedArray.length - 1;\n  let midPoint;\n  let position = start;\n  if (end < 0) {\n    position = 0;\n  } else if (event.created_at > sortedArray[end].created_at) {\n    position = end + 1;\n  } else if (event.created_at <= sortedArray[start].created_at) {\n    position = start;\n  } else\n    while (true) {\n      if (end <= start + 1) {\n        position = end;\n        break;\n      }\n      midPoint = Math.floor(start + (end - start) / 2);\n      if (sortedArray[midPoint].created_at < event.created_at) {\n        start = midPoint;\n      } else if (sortedArray[midPoint].created_at > event.created_at) {\n        end = midPoint;\n      } else {\n        position = midPoint;\n        break;\n      }\n    }\n  if (sortedArray[position]?.id !== event.id) {\n    return [\n      ...sortedArray.slice(0, position),\n      event,\n      ...sortedArray.slice(position)\n    ];\n  }\n  return sortedArray;\n}\n\n// event.ts\nvar Kind = /* @__PURE__ */ ((Kind2) => {\n  Kind2[Kind2[\"Metadata\"] = 0] = \"Metadata\";\n  Kind2[Kind2[\"Text\"] = 1] = \"Text\";\n  Kind2[Kind2[\"RecommendRelay\"] = 2] = \"RecommendRelay\";\n  Kind2[Kind2[\"Contacts\"] = 3] = \"Contacts\";\n  Kind2[Kind2[\"EncryptedDirectMessage\"] = 4] = \"EncryptedDirectMessage\";\n  Kind2[Kind2[\"EventDeletion\"] = 5] = \"EventDeletion\";\n  Kind2[Kind2[\"Reaction\"] = 7] = \"Reaction\";\n  Kind2[Kind2[\"ChannelCreation\"] = 40] = \"ChannelCreation\";\n  Kind2[Kind2[\"ChannelMetadata\"] = 41] = \"ChannelMetadata\";\n  Kind2[Kind2[\"ChannelMessage\"] = 42] = \"ChannelMessage\";\n  Kind2[Kind2[\"ChannelHideMessage\"] = 43] = \"ChannelHideMessage\";\n  Kind2[Kind2[\"ChannelMuteUser\"] = 44] = \"ChannelMuteUser\";\n  return Kind2;\n})(Kind || {});\nfunction getBlankEvent() {\n  return {\n    kind: 255,\n    pubkey: \"\",\n    content: \"\",\n    tags: [],\n    created_at: 0\n  };\n}\nfunction serializeEvent(evt) {\n  if (!validateEvent(evt))\n    throw new Error(\"can't serialize event with wrong or missing properties\");\n  return JSON.stringify([\n    0,\n    evt.pubkey,\n    evt.created_at,\n    evt.kind,\n    evt.tags,\n    evt.content\n  ]);\n}\nfunction getEventHash(event) {\n  let eventHash = sha256(utf8Encoder.encode(serializeEvent(event)));\n  return secp256k12.utils.bytesToHex(eventHash);\n}\nfunction validateEvent(event) {\n  if (typeof event.content !== \"string\")\n    return false;\n  if (typeof event.created_at !== \"number\")\n    return false;\n  if (typeof event.pubkey !== \"string\")\n    return false;\n  if (!event.pubkey.match(/^[a-f0-9]{64}$/))\n    return false;\n  if (!Array.isArray(event.tags))\n    return false;\n  for (let i = 0; i < event.tags.length; i++) {\n    let tag = event.tags[i];\n    if (!Array.isArray(tag))\n      return false;\n    for (let j = 0; j < tag.length; j++) {\n      if (typeof tag[j] === \"object\")\n        return false;\n    }\n  }\n  return true;\n}\nfunction verifySignature(event) {\n  return secp256k12.schnorr.verifySync(\n    event.sig,\n    getEventHash(event),\n    event.pubkey\n  );\n}\nfunction signEvent(event, key) {\n  return secp256k12.utils.bytesToHex(\n    secp256k12.schnorr.signSync(getEventHash(event), key)\n  );\n}\n\n// filter.ts\nfunction matchFilter(filter, event) {\n  if (filter.ids && filter.ids.indexOf(event.id) === -1)\n    return false;\n  if (filter.kinds && filter.kinds.indexOf(event.kind) === -1)\n    return false;\n  if (filter.authors && filter.authors.indexOf(event.pubkey) === -1)\n    return false;\n  for (let f in filter) {\n    if (f[0] === \"#\") {\n      let tagName = f.slice(1);\n      let values = filter[`#${tagName}`];\n      if (values && !event.tags.find(\n        ([t, v]) => t === f.slice(1) && values.indexOf(v) !== -1\n      ))\n        return false;\n    }\n  }\n  if (filter.since && event.created_at < filter.since)\n    return false;\n  if (filter.until && event.created_at >= filter.until)\n    return false;\n  return true;\n}\nfunction matchFilters(filters, event) {\n  for (let i = 0; i < filters.length; i++) {\n    if (matchFilter(filters[i], event))\n      return true;\n  }\n  return false;\n}\n\n// fakejson.ts\nvar fakejson_exports = {};\n__export(fakejson_exports, {\n  getHex64: () => getHex64,\n  getInt: () => getInt,\n  matchEventId: () => matchEventId,\n  matchEventKind: () => matchEventKind,\n  matchEventPubkey: () => matchEventPubkey\n});\nfunction getHex64(json, field) {\n  let len = field.length + 3;\n  let idx = json.indexOf(`\"${field}\":`) + len;\n  let s = json.slice(idx).indexOf(`\"`) + idx + 1;\n  return json.slice(s, s + 64);\n}\nfunction getInt(json, field) {\n  let len = field.length;\n  let idx = json.indexOf(`\"${field}\":`) + len + 3;\n  let sliced = json.slice(idx);\n  let end = Math.min(sliced.indexOf(\",\"), sliced.indexOf(\"}\"));\n  return parseInt(sliced.slice(0, end), 10);\n}\nfunction matchEventId(json, id) {\n  return id === getHex64(json, \"id\");\n}\nfunction matchEventPubkey(json, pubkey) {\n  return pubkey === getHex64(json, \"pubkey\");\n}\nfunction matchEventKind(json, kind) {\n  return kind === getInt(json, \"kind\");\n}\n\n// relay.ts\nfunction relayInit(url, alreadyHaveEvent = () => false) {\n  var ws;\n  var resolveClose;\n  var setOpen;\n  var untilOpen = new Promise((resolve) => {\n    setOpen = resolve;\n  });\n  var openSubs = {};\n  var listeners = {\n    connect: [],\n    disconnect: [],\n    error: [],\n    notice: []\n  };\n  var subListeners = {};\n  var pubListeners = {};\n  async function connectRelay() {\n    return new Promise((resolve, reject) => {\n      ws = new WebSocket(url);\n      ws.onopen = () => {\n        listeners.connect.forEach((cb) => cb());\n        setOpen();\n        resolve();\n      };\n      ws.onerror = () => {\n        listeners.error.forEach((cb) => cb());\n        reject();\n      };\n      ws.onclose = async () => {\n        listeners.disconnect.forEach((cb) => cb());\n        resolveClose && resolveClose();\n      };\n      let incomingMessageQueue = [];\n      let handleNextInterval;\n      ws.onmessage = (e) => {\n        incomingMessageQueue.push(e.data);\n        if (!handleNextInterval) {\n          handleNextInterval = setInterval(handleNext, 0);\n        }\n      };\n      function handleNext() {\n        if (incomingMessageQueue.length === 0) {\n          clearInterval(handleNextInterval);\n          handleNextInterval = null;\n          return;\n        }\n        var json = incomingMessageQueue.shift();\n        if (!json || alreadyHaveEvent(getHex64(json, \"id\"))) {\n          return;\n        }\n        try {\n          let data = JSON.parse(json);\n          switch (data[0]) {\n            case \"EVENT\":\n              let id = data[1];\n              let event = data[2];\n              if (validateEvent(event) && openSubs[id] && (openSubs[id].skipVerification || verifySignature(event)) && matchFilters(openSubs[id].filters, event)) {\n                openSubs[id];\n                (subListeners[id]?.event || []).forEach((cb) => cb(event));\n              }\n              return;\n            case \"EOSE\": {\n              let id2 = data[1];\n              (subListeners[id2]?.eose || []).forEach((cb) => cb());\n              return;\n            }\n            case \"OK\": {\n              let id2 = data[1];\n              let ok = data[2];\n              let reason = data[3] || \"\";\n              if (ok)\n                pubListeners[id2]?.ok.forEach((cb) => cb());\n              else\n                pubListeners[id2]?.failed.forEach((cb) => cb(reason));\n              return;\n            }\n            case \"NOTICE\":\n              let notice = data[1];\n              listeners.notice.forEach((cb) => cb(notice));\n              return;\n          }\n        } catch (err) {\n          return;\n        }\n      }\n    });\n  }\n  async function connect() {\n    if (ws?.readyState && ws.readyState === 1)\n      return;\n    await connectRelay();\n  }\n  async function trySend(params) {\n    let msg = JSON.stringify(params);\n    await untilOpen;\n    try {\n      ws.send(msg);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n  const sub = (filters, {\n    skipVerification = false,\n    id = Math.random().toString().slice(2)\n  } = {}) => {\n    let subid = id;\n    openSubs[subid] = {\n      id: subid,\n      filters,\n      skipVerification\n    };\n    trySend([\"REQ\", subid, ...filters]);\n    return {\n      sub: (newFilters, newOpts = {}) => sub(newFilters || filters, {\n        skipVerification: newOpts.skipVerification || skipVerification,\n        id: subid\n      }),\n      unsub: () => {\n        delete openSubs[subid];\n        delete subListeners[subid];\n        trySend([\"CLOSE\", subid]);\n      },\n      on: (type, cb) => {\n        subListeners[subid] = subListeners[subid] || {\n          event: [],\n          eose: []\n        };\n        subListeners[subid][type].push(cb);\n      },\n      off: (type, cb) => {\n        let listeners2 = subListeners[subid];\n        let idx = listeners2[type].indexOf(cb);\n        if (idx >= 0)\n          listeners2[type].splice(idx, 1);\n      }\n    };\n  };\n  return {\n    url,\n    sub,\n    on: (type, cb) => {\n      listeners[type].push(cb);\n      if (type === \"connect\" && ws?.readyState === 1) {\n        cb();\n      }\n    },\n    off: (type, cb) => {\n      let index = listeners[type].indexOf(cb);\n      if (index !== -1)\n        listeners[type].splice(index, 1);\n    },\n    publish(event) {\n      if (!event.id)\n        throw new Error(`event ${event} has no id`);\n      let id = event.id;\n      var sent = false;\n      var mustMonitor = false;\n      trySend([\"EVENT\", event]).then(() => {\n        sent = true;\n        if (mustMonitor) {\n          startMonitoring();\n          mustMonitor = false;\n        }\n      }).catch(() => {\n      });\n      const startMonitoring = () => {\n        let monitor = sub([{ ids: [id] }], {\n          id: `monitor-${id.slice(0, 5)}`\n        });\n        let willUnsub = setTimeout(() => {\n          ;\n          (pubListeners[id]?.failed || []).forEach(\n            (cb) => cb(\"event not seen after 5 seconds\")\n          );\n          monitor.unsub();\n        }, 5e3);\n        monitor.on(\"event\", () => {\n          clearTimeout(willUnsub);\n          (pubListeners[id]?.seen || []).forEach((cb) => cb());\n        });\n      };\n      return {\n        on: (type, cb) => {\n          pubListeners[id] = pubListeners[id] || {\n            ok: [],\n            seen: [],\n            failed: []\n          };\n          pubListeners[id][type].push(cb);\n          if (type === \"seen\") {\n            if (sent)\n              startMonitoring();\n            else\n              mustMonitor = true;\n          }\n        },\n        off: (type, cb) => {\n          let listeners2 = pubListeners[id];\n          if (!listeners2)\n            return;\n          let idx = listeners2[type].indexOf(cb);\n          if (idx >= 0)\n            listeners2[type].splice(idx, 1);\n        }\n      };\n    },\n    connect,\n    close() {\n      ws.close();\n      return new Promise((resolve) => {\n        resolveClose = resolve;\n      });\n    },\n    get status() {\n      return ws?.readyState ?? 3;\n    }\n  };\n}\n\n// nip04.ts\nvar nip04_exports = {};\n__export(nip04_exports, {\n  decrypt: () => decrypt,\n  encrypt: () => encrypt\n});\nimport { randomBytes } from \"@noble/hashes/utils\";\nimport * as secp256k13 from \"@noble/secp256k1\";\nimport { base64 } from \"@scure/base\";\nasync function encrypt(privkey, pubkey, text) {\n  const key = secp256k13.getSharedSecret(privkey, \"02\" + pubkey);\n  const normalizedKey = getNormalizedX(key);\n  let iv = Uint8Array.from(randomBytes(16));\n  let plaintext = utf8Encoder.encode(text);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"encrypt\"]\n  );\n  let ciphertext = await crypto.subtle.encrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    plaintext\n  );\n  let ctb64 = base64.encode(new Uint8Array(ciphertext));\n  let ivb64 = base64.encode(new Uint8Array(iv.buffer));\n  return `${ctb64}?iv=${ivb64}`;\n}\nasync function decrypt(privkey, pubkey, data) {\n  let [ctb64, ivb64] = data.split(\"?iv=\");\n  let key = secp256k13.getSharedSecret(privkey, \"02\" + pubkey);\n  let normalizedKey = getNormalizedX(key);\n  let cryptoKey = await crypto.subtle.importKey(\n    \"raw\",\n    normalizedKey,\n    { name: \"AES-CBC\" },\n    false,\n    [\"decrypt\"]\n  );\n  let ciphertext = base64.decode(ctb64);\n  let iv = base64.decode(ivb64);\n  let plaintext = await crypto.subtle.decrypt(\n    { name: \"AES-CBC\", iv },\n    cryptoKey,\n    ciphertext\n  );\n  let text = utf8Decoder.decode(plaintext);\n  return text;\n}\nfunction getNormalizedX(key) {\n  return key.slice(1, 33);\n}\n\n// nip05.ts\nvar nip05_exports = {};\n__export(nip05_exports, {\n  queryProfile: () => queryProfile,\n  searchDomain: () => searchDomain,\n  useFetchImplementation: () => useFetchImplementation\n});\nvar _fetch;\ntry {\n  _fetch = fetch;\n} catch {\n}\nfunction useFetchImplementation(fetchImplementation) {\n  _fetch = fetchImplementation;\n}\nasync function searchDomain(domain, query = \"\") {\n  try {\n    let res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${query}`)).json();\n    return res.names;\n  } catch (_) {\n    return {};\n  }\n}\nasync function queryProfile(fullname) {\n  let [name, domain] = fullname.split(\"@\");\n  if (!domain) {\n    domain = name;\n    name = \"_\";\n  }\n  if (!name.match(/^[a-z0-9-_]+$/))\n    return null;\n  let res = await (await _fetch(`https://${domain}/.well-known/nostr.json?name=${name}`)).json();\n  if (!res?.names?.[name])\n    return null;\n  let pubkey = res.names[name];\n  let relays = res.relays?.[pubkey] || [];\n  return {\n    pubkey,\n    relays\n  };\n}\n\n// nip06.ts\nvar nip06_exports = {};\n__export(nip06_exports, {\n  generateSeedWords: () => generateSeedWords,\n  privateKeyFromSeedWords: () => privateKeyFromSeedWords,\n  validateWords: () => validateWords\n});\nimport * as secp256k14 from \"@noble/secp256k1\";\nimport { wordlist } from \"@scure/bip39/wordlists/english.js\";\nimport {\n  generateMnemonic,\n  mnemonicToSeedSync,\n  validateMnemonic\n} from \"@scure/bip39\";\nimport { HDKey } from \"@scure/bip32\";\nfunction privateKeyFromSeedWords(mnemonic, passphrase) {\n  let root = HDKey.fromMasterSeed(mnemonicToSeedSync(mnemonic, passphrase));\n  let privateKey = root.derive(`m/44'/1237'/0'/0/0`).privateKey;\n  if (!privateKey)\n    throw new Error(\"could not derive private key\");\n  return secp256k14.utils.bytesToHex(privateKey);\n}\nfunction generateSeedWords() {\n  return generateMnemonic(wordlist);\n}\nfunction validateWords(words) {\n  return validateMnemonic(words, wordlist);\n}\n\n// nip19.ts\nvar nip19_exports = {};\n__export(nip19_exports, {\n  decode: () => decode,\n  neventEncode: () => neventEncode,\n  noteEncode: () => noteEncode,\n  nprofileEncode: () => nprofileEncode,\n  npubEncode: () => npubEncode,\n  nsecEncode: () => nsecEncode\n});\nimport * as secp256k15 from \"@noble/secp256k1\";\nimport { bech32 } from \"@scure/base\";\nvar Bech32MaxSize = 5e3;\nfunction decode(nip19) {\n  let { prefix, words } = bech32.decode(nip19, Bech32MaxSize);\n  let data = new Uint8Array(bech32.fromWords(words));\n  if (prefix === \"nprofile\") {\n    let tlv = parseTLV(data);\n    if (!tlv[0]?.[0])\n      throw new Error(\"missing TLV 0 for nprofile\");\n    if (tlv[0][0].length !== 32)\n      throw new Error(\"TLV 0 should be 32 bytes\");\n    return {\n      type: \"nprofile\",\n      data: {\n        pubkey: secp256k15.utils.bytesToHex(tlv[0][0]),\n        relays: tlv[1].map((d) => utf8Decoder.decode(d))\n      }\n    };\n  }\n  if (prefix === \"nevent\") {\n    let tlv = parseTLV(data);\n    if (!tlv[0]?.[0])\n      throw new Error(\"missing TLV 0 for nevent\");\n    if (tlv[0][0].length !== 32)\n      throw new Error(\"TLV 0 should be 32 bytes\");\n    return {\n      type: \"nevent\",\n      data: {\n        id: secp256k15.utils.bytesToHex(tlv[0][0]),\n        relays: tlv[1].map((d) => utf8Decoder.decode(d))\n      }\n    };\n  }\n  if (prefix === \"nsec\" || prefix === \"npub\" || prefix === \"note\") {\n    return { type: prefix, data: secp256k15.utils.bytesToHex(data) };\n  }\n  throw new Error(`unknown prefix ${prefix}`);\n}\nfunction parseTLV(data) {\n  let result = {};\n  let rest = data;\n  while (rest.length > 0) {\n    let t = rest[0];\n    let l = rest[1];\n    let v = rest.slice(2, 2 + l);\n    rest = rest.slice(2 + l);\n    if (v.length < l)\n      continue;\n    result[t] = result[t] || [];\n    result[t].push(v);\n  }\n  return result;\n}\nfunction nsecEncode(hex) {\n  return encodeBytes(\"nsec\", hex);\n}\nfunction npubEncode(hex) {\n  return encodeBytes(\"npub\", hex);\n}\nfunction noteEncode(hex) {\n  return encodeBytes(\"note\", hex);\n}\nfunction encodeBytes(prefix, hex) {\n  let data = secp256k15.utils.hexToBytes(hex);\n  let words = bech32.toWords(data);\n  return bech32.encode(prefix, words, Bech32MaxSize);\n}\nfunction nprofileEncode(profile) {\n  let data = encodeTLV({\n    0: [secp256k15.utils.hexToBytes(profile.pubkey)],\n    1: (profile.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nprofile\", words, Bech32MaxSize);\n}\nfunction neventEncode(event) {\n  let data = encodeTLV({\n    0: [secp256k15.utils.hexToBytes(event.id)],\n    1: (event.relays || []).map((url) => utf8Encoder.encode(url))\n  });\n  let words = bech32.toWords(data);\n  return bech32.encode(\"nevent\", words, Bech32MaxSize);\n}\nfunction encodeTLV(tlv) {\n  let entries = [];\n  Object.entries(tlv).forEach(([t, vs]) => {\n    vs.forEach((v) => {\n      let entry = new Uint8Array(v.length + 2);\n      entry.set([parseInt(t)], 0);\n      entry.set([v.length], 1);\n      entry.set(v, 2);\n      entries.push(entry);\n    });\n  });\n  return secp256k15.utils.concatBytes(...entries);\n}\n\n// nip26.ts\nvar nip26_exports = {};\n__export(nip26_exports, {\n  createDelegation: () => createDelegation,\n  getDelegator: () => getDelegator\n});\nimport * as secp256k16 from \"@noble/secp256k1\";\nimport { sha256 as sha2562 } from \"@noble/hashes/sha256\";\nfunction createDelegation(privateKey, parameters) {\n  let conditions = [];\n  if ((parameters.kind || -1) >= 0)\n    conditions.push(`kind=${parameters.kind}`);\n  if (parameters.until)\n    conditions.push(`created_at<${parameters.until}`);\n  if (parameters.since)\n    conditions.push(`created_at>${parameters.since}`);\n  let cond = conditions.join(\"&\");\n  if (cond === \"\")\n    throw new Error(\"refusing to create a delegation without any conditions\");\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${parameters.pubkey}:${cond}`)\n  );\n  let sig = secp256k16.utils.bytesToHex(\n    secp256k16.schnorr.signSync(sighash, privateKey)\n  );\n  return {\n    from: getPublicKey(privateKey),\n    to: parameters.pubkey,\n    cond,\n    sig\n  };\n}\nfunction getDelegator(event) {\n  let tag = event.tags.find((tag2) => tag2[0] === \"delegation\" && tag2.length >= 4);\n  if (!tag)\n    return null;\n  let pubkey = tag[1];\n  let cond = tag[2];\n  let sig = tag[3];\n  let conditions = cond.split(\"&\");\n  for (let i = 0; i < conditions.length; i++) {\n    let [key, operator, value] = conditions[i].split(/\\b/);\n    if (key === \"kind\" && operator === \"=\" && event.kind === parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \"<\" && event.created_at < parseInt(value))\n      continue;\n    else if (key === \"created_at\" && operator === \">\" && event.created_at > parseInt(value))\n      continue;\n    else\n      return null;\n  }\n  let sighash = sha2562(\n    utf8Encoder.encode(`nostr:delegation:${event.pubkey}:${cond}`)\n  );\n  if (!secp256k16.schnorr.verifySync(sig, sighash, pubkey))\n    return null;\n  return pubkey;\n}\n\n// index.ts\nimport * as secp256k17 from \"@noble/secp256k1\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha256 as sha2563 } from \"@noble/hashes/sha256\";\nsecp256k17.utils.hmacSha256Sync = (key, ...msgs) => hmac(sha2563, key, secp256k17.utils.concatBytes(...msgs));\nsecp256k17.utils.sha256Sync = (...msgs) => sha2563(secp256k17.utils.concatBytes(...msgs));\nexport {\n  Kind,\n  fakejson_exports as fj,\n  generatePrivateKey,\n  getBlankEvent,\n  getEventHash,\n  getPublicKey,\n  matchFilter,\n  matchFilters,\n  nip04_exports as nip04,\n  nip05_exports as nip05,\n  nip06_exports as nip06,\n  nip19_exports as nip19,\n  nip26_exports as nip26,\n  relayInit,\n  serializeEvent,\n  signEvent,\n  utils_exports as utils,\n  validateEvent,\n  verifySignature\n};\n","/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */\nimport * as nodeCrypto from 'crypto';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _3n = BigInt(3);\nconst _8n = BigInt(8);\nconst CURVE = Object.freeze({\n    a: _0n,\n    b: BigInt(7),\n    P: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f'),\n    n: BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141'),\n    h: _1n,\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n});\nconst divNearest = (a, b) => (a + b / _2n) / b;\nconst endo = {\n    beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n    splitScalar(k) {\n        const { n } = CURVE;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000');\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg)\n            k1 = n - k1;\n        if (k2neg)\n            k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n            throw new Error('splitScalarEndo: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n    },\n};\nconst fieldLen = 32;\nconst groupLen = 32;\nconst hashLen = 32;\nconst compressedLen = fieldLen + 1;\nconst uncompressedLen = 2 * fieldLen + 1;\nexport { CURVE };\nfunction weierstrass(x) {\n    const { a, b } = CURVE;\n    const x2 = mod(x * x);\n    const x3 = mod(x2 * x);\n    return mod(x3 + a * x + b);\n}\nconst USE_ENDOMORPHISM = CURVE.a === _0n;\nclass ShaError extends Error {\n    constructor(message) {\n        super(message);\n    }\n}\nfunction assertJacPoint(other) {\n    if (!(other instanceof JacobianPoint))\n        throw new TypeError('JacobianPoint expected');\n}\nclass JacobianPoint {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n    static fromAffine(p) {\n        if (!(p instanceof Point)) {\n            throw new TypeError('JacobianPoint#fromAffine: expected Point');\n        }\n        if (p.equals(Point.ZERO))\n            return JacobianPoint.ZERO;\n        return new JacobianPoint(p.x, p.y, _1n);\n    }\n    static toAffineBatch(points) {\n        const toInv = invertBatch(points.map((p) => p.z));\n        return points.map((p, i) => p.toAffine(toInv[i]));\n    }\n    static normalizeZ(points) {\n        return JacobianPoint.toAffineBatch(points).map(JacobianPoint.fromAffine);\n    }\n    equals(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        return U1 === U2 && S1 === S2;\n    }\n    negate() {\n        return new JacobianPoint(this.x, mod(-this.y), this.z);\n    }\n    double() {\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const A = mod(X1 * X1);\n        const B = mod(Y1 * Y1);\n        const C = mod(B * B);\n        const x1b = X1 + B;\n        const D = mod(_2n * (mod(x1b * x1b) - A - C));\n        const E = mod(_3n * A);\n        const F = mod(E * E);\n        const X3 = mod(F - _2n * D);\n        const Y3 = mod(E * (D - X3) - _8n * C);\n        const Z3 = mod(_2n * Y1 * Z1);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    add(other) {\n        assertJacPoint(other);\n        const { x: X1, y: Y1, z: Z1 } = this;\n        const { x: X2, y: Y2, z: Z2 } = other;\n        if (X2 === _0n || Y2 === _0n)\n            return this;\n        if (X1 === _0n || Y1 === _0n)\n            return other;\n        const Z1Z1 = mod(Z1 * Z1);\n        const Z2Z2 = mod(Z2 * Z2);\n        const U1 = mod(X1 * Z2Z2);\n        const U2 = mod(X2 * Z1Z1);\n        const S1 = mod(mod(Y1 * Z2) * Z2Z2);\n        const S2 = mod(mod(Y2 * Z1) * Z1Z1);\n        const H = mod(U2 - U1);\n        const r = mod(S2 - S1);\n        if (H === _0n) {\n            if (r === _0n) {\n                return this.double();\n            }\n            else {\n                return JacobianPoint.ZERO;\n            }\n        }\n        const HH = mod(H * H);\n        const HHH = mod(H * HH);\n        const V = mod(U1 * HH);\n        const X3 = mod(r * r - HHH - _2n * V);\n        const Y3 = mod(r * (V - X3) - S1 * HHH);\n        const Z3 = mod(Z1 * Z2 * H);\n        return new JacobianPoint(X3, Y3, Z3);\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiplyUnsafe(scalar) {\n        const P0 = JacobianPoint.ZERO;\n        if (typeof scalar === 'bigint' && scalar === _0n)\n            return P0;\n        let n = normalizeScalar(scalar);\n        if (n === _1n)\n            return this;\n        if (!USE_ENDOMORPHISM) {\n            let p = P0;\n            let d = this;\n            while (n > _0n) {\n                if (n & _1n)\n                    p = p.add(d);\n                d = d.double();\n                n >>= _1n;\n            }\n            return p;\n        }\n        let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let k1p = P0;\n        let k2p = P0;\n        let d = this;\n        while (k1 > _0n || k2 > _0n) {\n            if (k1 & _1n)\n                k1p = k1p.add(d);\n            if (k2 & _1n)\n                k2p = k2p.add(d);\n            d = d.double();\n            k1 >>= _1n;\n            k2 >>= _1n;\n        }\n        if (k1neg)\n            k1p = k1p.negate();\n        if (k2neg)\n            k2p = k2p.negate();\n        k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n        return k1p.add(k2p);\n    }\n    precomputeWindow(W) {\n        const windows = USE_ENDOMORPHISM ? 128 / W + 1 : 256 / W + 1;\n        const points = [];\n        let p = this;\n        let base = p;\n        for (let window = 0; window < windows; window++) {\n            base = p;\n            points.push(base);\n            for (let i = 1; i < 2 ** (W - 1); i++) {\n                base = base.add(p);\n                points.push(base);\n            }\n            p = base.double();\n        }\n        return points;\n    }\n    wNAF(n, affinePoint) {\n        if (!affinePoint && this.equals(JacobianPoint.BASE))\n            affinePoint = Point.BASE;\n        const W = (affinePoint && affinePoint._WINDOW_SIZE) || 1;\n        if (256 % W) {\n            throw new Error('Point#wNAF: Invalid precomputation window, must be power of 2');\n        }\n        let precomputes = affinePoint && pointPrecomputes.get(affinePoint);\n        if (!precomputes) {\n            precomputes = this.precomputeWindow(W);\n            if (affinePoint && W !== 1) {\n                precomputes = JacobianPoint.normalizeZ(precomputes);\n                pointPrecomputes.set(affinePoint, precomputes);\n            }\n        }\n        let p = JacobianPoint.ZERO;\n        let f = JacobianPoint.BASE;\n        const windows = 1 + (USE_ENDOMORPHISM ? 128 / W : 256 / W);\n        const windowSize = 2 ** (W - 1);\n        const mask = BigInt(2 ** W - 1);\n        const maxNumber = 2 ** W;\n        const shiftBy = BigInt(W);\n        for (let window = 0; window < windows; window++) {\n            const offset = window * windowSize;\n            let wbits = Number(n & mask);\n            n >>= shiftBy;\n            if (wbits > windowSize) {\n                wbits -= maxNumber;\n                n += _1n;\n            }\n            const offset1 = offset;\n            const offset2 = offset + Math.abs(wbits) - 1;\n            const cond1 = window % 2 !== 0;\n            const cond2 = wbits < 0;\n            if (wbits === 0) {\n                f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n            }\n            else {\n                p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n            }\n        }\n        return { p, f };\n    }\n    multiply(scalar, affinePoint) {\n        let n = normalizeScalar(scalar);\n        let point;\n        let fake;\n        if (USE_ENDOMORPHISM) {\n            const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n            let { p: k1p, f: f1p } = this.wNAF(k1, affinePoint);\n            let { p: k2p, f: f2p } = this.wNAF(k2, affinePoint);\n            k1p = constTimeNegate(k1neg, k1p);\n            k2p = constTimeNegate(k2neg, k2p);\n            k2p = new JacobianPoint(mod(k2p.x * endo.beta), k2p.y, k2p.z);\n            point = k1p.add(k2p);\n            fake = f1p.add(f2p);\n        }\n        else {\n            const { p, f } = this.wNAF(n, affinePoint);\n            point = p;\n            fake = f;\n        }\n        return JacobianPoint.normalizeZ([point, fake])[0];\n    }\n    toAffine(invZ) {\n        const { x, y, z } = this;\n        const is0 = this.equals(JacobianPoint.ZERO);\n        if (invZ == null)\n            invZ = is0 ? _8n : invert(z);\n        const iz1 = invZ;\n        const iz2 = mod(iz1 * iz1);\n        const iz3 = mod(iz2 * iz1);\n        const ax = mod(x * iz2);\n        const ay = mod(y * iz3);\n        const zz = mod(z * iz1);\n        if (is0)\n            return Point.ZERO;\n        if (zz !== _1n)\n            throw new Error('invZ was invalid');\n        return new Point(ax, ay);\n    }\n}\nJacobianPoint.BASE = new JacobianPoint(CURVE.Gx, CURVE.Gy, _1n);\nJacobianPoint.ZERO = new JacobianPoint(_0n, _1n, _0n);\nfunction constTimeNegate(condition, item) {\n    const neg = item.negate();\n    return condition ? neg : item;\n}\nconst pointPrecomputes = new WeakMap();\nexport class Point {\n    constructor(x, y) {\n        this.x = x;\n        this.y = y;\n    }\n    _setWindowSize(windowSize) {\n        this._WINDOW_SIZE = windowSize;\n        pointPrecomputes.delete(this);\n    }\n    hasEvenY() {\n        return this.y % _2n === _0n;\n    }\n    static fromCompressedHex(bytes) {\n        const isShort = bytes.length === 32;\n        const x = bytesToNumber(isShort ? bytes : bytes.subarray(1));\n        if (!isValidFieldElement(x))\n            throw new Error('Point is not on curve');\n        const y2 = weierstrass(x);\n        let y = sqrtMod(y2);\n        const isYOdd = (y & _1n) === _1n;\n        if (isShort) {\n            if (isYOdd)\n                y = mod(-y);\n        }\n        else {\n            const isFirstByteOdd = (bytes[0] & 1) === 1;\n            if (isFirstByteOdd !== isYOdd)\n                y = mod(-y);\n        }\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromUncompressedHex(bytes) {\n        const x = bytesToNumber(bytes.subarray(1, fieldLen + 1));\n        const y = bytesToNumber(bytes.subarray(fieldLen + 1, fieldLen * 2 + 1));\n        const point = new Point(x, y);\n        point.assertValidity();\n        return point;\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        const len = bytes.length;\n        const header = bytes[0];\n        if (len === fieldLen)\n            return this.fromCompressedHex(bytes);\n        if (len === compressedLen && (header === 0x02 || header === 0x03)) {\n            return this.fromCompressedHex(bytes);\n        }\n        if (len === uncompressedLen && header === 0x04)\n            return this.fromUncompressedHex(bytes);\n        throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${len}`);\n    }\n    static fromPrivateKey(privateKey) {\n        return Point.BASE.multiply(normalizePrivateKey(privateKey));\n    }\n    static fromSignature(msgHash, signature, recovery) {\n        const { r, s } = normalizeSignature(signature);\n        if (![0, 1, 2, 3].includes(recovery))\n            throw new Error('Cannot recover: invalid recovery bit');\n        const h = truncateHash(ensureBytes(msgHash));\n        const { n } = CURVE;\n        const radj = recovery === 2 || recovery === 3 ? r + n : r;\n        const rinv = invert(radj, n);\n        const u1 = mod(-h * rinv, n);\n        const u2 = mod(s * rinv, n);\n        const prefix = recovery & 1 ? '03' : '02';\n        const R = Point.fromHex(prefix + numTo32bStr(radj));\n        const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2);\n        if (!Q)\n            throw new Error('Cannot recover signature: point at infinify');\n        Q.assertValidity();\n        return Q;\n    }\n    toRawBytes(isCompressed = false) {\n        return hexToBytes(this.toHex(isCompressed));\n    }\n    toHex(isCompressed = false) {\n        const x = numTo32bStr(this.x);\n        if (isCompressed) {\n            const prefix = this.hasEvenY() ? '02' : '03';\n            return `${prefix}${x}`;\n        }\n        else {\n            return `04${x}${numTo32bStr(this.y)}`;\n        }\n    }\n    toHexX() {\n        return this.toHex(true).slice(2);\n    }\n    toRawX() {\n        return this.toRawBytes(true).slice(1);\n    }\n    assertValidity() {\n        const msg = 'Point is not on elliptic curve';\n        const { x, y } = this;\n        if (!isValidFieldElement(x) || !isValidFieldElement(y))\n            throw new Error(msg);\n        const left = mod(y * y);\n        const right = weierstrass(x);\n        if (mod(left - right) !== _0n)\n            throw new Error(msg);\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y;\n    }\n    negate() {\n        return new Point(this.x, mod(-this.y));\n    }\n    double() {\n        return JacobianPoint.fromAffine(this).double().toAffine();\n    }\n    add(other) {\n        return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(other)).toAffine();\n    }\n    subtract(other) {\n        return this.add(other.negate());\n    }\n    multiply(scalar) {\n        return JacobianPoint.fromAffine(this).multiply(scalar, this).toAffine();\n    }\n    multiplyAndAddUnsafe(Q, a, b) {\n        const P = JacobianPoint.fromAffine(this);\n        const aP = a === _0n || a === _1n || this !== Point.BASE ? P.multiplyUnsafe(a) : P.multiply(a);\n        const bQ = JacobianPoint.fromAffine(Q).multiplyUnsafe(b);\n        const sum = aP.add(bQ);\n        return sum.equals(JacobianPoint.ZERO) ? undefined : sum.toAffine();\n    }\n}\nPoint.BASE = new Point(CURVE.Gx, CURVE.Gy);\nPoint.ZERO = new Point(_0n, _0n);\nfunction sliceDER(s) {\n    return Number.parseInt(s[0], 16) >= 8 ? '00' + s : s;\n}\nfunction parseDERInt(data) {\n    if (data.length < 2 || data[0] !== 0x02) {\n        throw new Error(`Invalid signature integer tag: ${bytesToHex(data)}`);\n    }\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) {\n        throw new Error(`Invalid signature integer: wrong length`);\n    }\n    if (res[0] === 0x00 && res[1] <= 0x7f) {\n        throw new Error('Invalid signature integer: trailing length');\n    }\n    return { data: bytesToNumber(res), left: data.subarray(len + 2) };\n}\nfunction parseDERSignature(data) {\n    if (data.length < 2 || data[0] != 0x30) {\n        throw new Error(`Invalid signature tag: ${bytesToHex(data)}`);\n    }\n    if (data[1] !== data.length - 2) {\n        throw new Error('Invalid signature: incorrect length');\n    }\n    const { data: r, left: sBytes } = parseDERInt(data.subarray(2));\n    const { data: s, left: rBytesLeft } = parseDERInt(sBytes);\n    if (rBytesLeft.length) {\n        throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(rBytesLeft)}`);\n    }\n    return { r, s };\n}\nexport class Signature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromCompact(hex) {\n        const arr = hex instanceof Uint8Array;\n        const name = 'Signature.fromCompact';\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`${name}: Expected string or Uint8Array`);\n        const str = arr ? bytesToHex(hex) : hex;\n        if (str.length !== 128)\n            throw new Error(`${name}: Expected 64-byte hex`);\n        return new Signature(hexToNumber(str.slice(0, 64)), hexToNumber(str.slice(64, 128)));\n    }\n    static fromDER(hex) {\n        const arr = hex instanceof Uint8Array;\n        if (typeof hex !== 'string' && !arr)\n            throw new TypeError(`Signature.fromDER: Expected string or Uint8Array`);\n        const { r, s } = parseDERSignature(arr ? hex : hexToBytes(hex));\n        return new Signature(r, s);\n    }\n    static fromHex(hex) {\n        return this.fromDER(hex);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isWithinCurveOrder(r))\n            throw new Error('Invalid Signature: r must be 0 < r < n');\n        if (!isWithinCurveOrder(s))\n            throw new Error('Invalid Signature: s must be 0 < s < n');\n    }\n    hasHighS() {\n        const HALF = CURVE.n >> _1n;\n        return this.s > HALF;\n    }\n    normalizeS() {\n        return this.hasHighS() ? new Signature(this.r, mod(-this.s, CURVE.n)) : this;\n    }\n    toDERRawBytes() {\n        return hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n        const sHex = sliceDER(numberToHexUnpadded(this.s));\n        const rHex = sliceDER(numberToHexUnpadded(this.r));\n        const sHexL = sHex.length / 2;\n        const rHexL = rHex.length / 2;\n        const sLen = numberToHexUnpadded(sHexL);\n        const rLen = numberToHexUnpadded(rHexL);\n        const length = numberToHexUnpadded(rHexL + sHexL + 4);\n        return `30${length}02${rLen}${rHex}02${sLen}${sHex}`;\n    }\n    toRawBytes() {\n        return this.toDERRawBytes();\n    }\n    toHex() {\n        return this.toDERHex();\n    }\n    toCompactRawBytes() {\n        return hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n}\nfunction concatBytes(...arrays) {\n    if (!arrays.every((b) => b instanceof Uint8Array))\n        throw new Error('Uint8Array list expected');\n    if (arrays.length === 1)\n        return arrays[0];\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    if (!(uint8a instanceof Uint8Array))\n        throw new Error('Expected Uint8Array');\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nconst POW_2_256 = BigInt('0x10000000000000000000000000000000000000000000000000000000000000000');\nfunction numTo32bStr(num) {\n    if (typeof num !== 'bigint')\n        throw new Error('Expected bigint');\n    if (!(_0n <= num && num < POW_2_256))\n        throw new Error('Expected number 0 <= n < 2^256');\n    return num.toString(16).padStart(64, '0');\n}\nfunction numTo32b(num) {\n    const b = hexToBytes(numTo32bStr(num));\n    if (b.length !== 32)\n        throw new Error('Error: expected 32 bytes');\n    return b;\n}\nfunction numberToHexUnpadded(num) {\n    const hex = num.toString(16);\n    return hex.length & 1 ? `0${hex}` : hex;\n}\nfunction hexToNumber(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToNumber: expected string, got ' + typeof hex);\n    }\n    return BigInt(`0x${hex}`);\n}\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex' + hex.length);\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        const hexByte = hex.slice(j, j + 2);\n        const byte = Number.parseInt(hexByte, 16);\n        if (Number.isNaN(byte) || byte < 0)\n            throw new Error('Invalid byte sequence');\n        array[i] = byte;\n    }\n    return array;\n}\nfunction bytesToNumber(bytes) {\n    return hexToNumber(bytesToHex(bytes));\n}\nfunction ensureBytes(hex) {\n    return hex instanceof Uint8Array ? Uint8Array.from(hex) : hexToBytes(hex);\n}\nfunction normalizeScalar(num) {\n    if (typeof num === 'number' && Number.isSafeInteger(num) && num > 0)\n        return BigInt(num);\n    if (typeof num === 'bigint' && isWithinCurveOrder(num))\n        return num;\n    throw new TypeError('Expected valid private scalar: 0 < scalar < curve.n');\n}\nfunction mod(a, b = CURVE.P) {\n    const result = a % b;\n    return result >= _0n ? result : b + result;\n}\nfunction pow2(x, power) {\n    const { P } = CURVE;\n    let res = x;\n    while (power-- > _0n) {\n        res *= res;\n        res %= P;\n    }\n    return res;\n}\nfunction sqrtMod(x) {\n    const { P } = CURVE;\n    const _6n = BigInt(6);\n    const _11n = BigInt(11);\n    const _22n = BigInt(22);\n    const _23n = BigInt(23);\n    const _44n = BigInt(44);\n    const _88n = BigInt(88);\n    const b2 = (x * x * x) % P;\n    const b3 = (b2 * b2 * x) % P;\n    const b6 = (pow2(b3, _3n) * b3) % P;\n    const b9 = (pow2(b6, _3n) * b3) % P;\n    const b11 = (pow2(b9, _2n) * b2) % P;\n    const b22 = (pow2(b11, _11n) * b11) % P;\n    const b44 = (pow2(b22, _22n) * b22) % P;\n    const b88 = (pow2(b44, _44n) * b44) % P;\n    const b176 = (pow2(b88, _88n) * b88) % P;\n    const b220 = (pow2(b176, _44n) * b44) % P;\n    const b223 = (pow2(b220, _3n) * b3) % P;\n    const t1 = (pow2(b223, _23n) * b22) % P;\n    const t2 = (pow2(t1, _6n) * b2) % P;\n    const rt = pow2(t2, _2n);\n    const xc = (rt * rt) % P;\n    if (xc !== x)\n        throw new Error('Cannot find square root');\n    return rt;\n}\nfunction invert(number, modulo = CURVE.P) {\n    if (number === _0n || modulo <= _0n) {\n        throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n    }\n    let a = mod(number, modulo);\n    let b = modulo;\n    let x = _0n, y = _1n, u = _1n, v = _0n;\n    while (a !== _0n) {\n        const q = b / a;\n        const r = b % a;\n        const m = x - u * q;\n        const n = y - v * q;\n        b = a, a = r, x = u, y = v, u = m, v = n;\n    }\n    const gcd = b;\n    if (gcd !== _1n)\n        throw new Error('invert: does not exist');\n    return mod(x, modulo);\n}\nfunction invertBatch(nums, p = CURVE.P) {\n    const scratch = new Array(nums.length);\n    const lastMultiplied = nums.reduce((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = acc;\n        return mod(acc * num, p);\n    }, _1n);\n    const inverted = invert(lastMultiplied, p);\n    nums.reduceRight((acc, num, i) => {\n        if (num === _0n)\n            return acc;\n        scratch[i] = mod(acc * scratch[i], p);\n        return mod(acc * num, p);\n    }, inverted);\n    return scratch;\n}\nfunction bits2int_2(bytes) {\n    const delta = bytes.length * 8 - groupLen * 8;\n    const num = bytesToNumber(bytes);\n    return delta > 0 ? num >> BigInt(delta) : num;\n}\nfunction truncateHash(hash, truncateOnly = false) {\n    const h = bits2int_2(hash);\n    if (truncateOnly)\n        return h;\n    const { n } = CURVE;\n    return h >= n ? h - n : h;\n}\nlet _sha256Sync;\nlet _hmacSha256Sync;\nclass HmacDrbg {\n    constructor(hashLen, qByteLen) {\n        this.hashLen = hashLen;\n        this.qByteLen = qByteLen;\n        if (typeof hashLen !== 'number' || hashLen < 2)\n            throw new Error('hashLen must be a number');\n        if (typeof qByteLen !== 'number' || qByteLen < 2)\n            throw new Error('qByteLen must be a number');\n        this.v = new Uint8Array(hashLen).fill(1);\n        this.k = new Uint8Array(hashLen).fill(0);\n        this.counter = 0;\n    }\n    hmac(...values) {\n        return utils.hmacSha256(this.k, ...values);\n    }\n    hmacSync(...values) {\n        return _hmacSha256Sync(this.k, ...values);\n    }\n    checkSync() {\n        if (typeof _hmacSha256Sync !== 'function')\n            throw new ShaError('hmacSha256Sync needs to be set');\n    }\n    incr() {\n        if (this.counter >= 1000)\n            throw new Error('Tried 1,000 k values for sign(), all were invalid');\n        this.counter += 1;\n    }\n    async reseed(seed = new Uint8Array()) {\n        this.k = await this.hmac(this.v, Uint8Array.from([0x00]), seed);\n        this.v = await this.hmac(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = await this.hmac(this.v, Uint8Array.from([0x01]), seed);\n        this.v = await this.hmac(this.v);\n    }\n    reseedSync(seed = new Uint8Array()) {\n        this.checkSync();\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x00]), seed);\n        this.v = this.hmacSync(this.v);\n        if (seed.length === 0)\n            return;\n        this.k = this.hmacSync(this.v, Uint8Array.from([0x01]), seed);\n        this.v = this.hmacSync(this.v);\n    }\n    async generate() {\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = await this.hmac(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n    generateSync() {\n        this.checkSync();\n        this.incr();\n        let len = 0;\n        const out = [];\n        while (len < this.qByteLen) {\n            this.v = this.hmacSync(this.v);\n            const sl = this.v.slice();\n            out.push(sl);\n            len += this.v.length;\n        }\n        return concatBytes(...out);\n    }\n}\nfunction isWithinCurveOrder(num) {\n    return _0n < num && num < CURVE.n;\n}\nfunction isValidFieldElement(num) {\n    return _0n < num && num < CURVE.P;\n}\nfunction kmdToSig(kBytes, m, d, lowS = true) {\n    const { n } = CURVE;\n    const k = truncateHash(kBytes, true);\n    if (!isWithinCurveOrder(k))\n        return;\n    const kinv = invert(k, n);\n    const q = Point.BASE.multiply(k);\n    const r = mod(q.x, n);\n    if (r === _0n)\n        return;\n    const s = mod(kinv * mod(m + d * r, n), n);\n    if (s === _0n)\n        return;\n    let sig = new Signature(r, s);\n    let recovery = (q.x === sig.r ? 0 : 2) | Number(q.y & _1n);\n    if (lowS && sig.hasHighS()) {\n        sig = sig.normalizeS();\n        recovery ^= 1;\n    }\n    return { sig, recovery };\n}\nfunction normalizePrivateKey(key) {\n    let num;\n    if (typeof key === 'bigint') {\n        num = key;\n    }\n    else if (typeof key === 'number' && Number.isSafeInteger(key) && key > 0) {\n        num = BigInt(key);\n    }\n    else if (typeof key === 'string') {\n        if (key.length !== 2 * groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = hexToNumber(key);\n    }\n    else if (key instanceof Uint8Array) {\n        if (key.length !== groupLen)\n            throw new Error('Expected 32 bytes of private key');\n        num = bytesToNumber(key);\n    }\n    else {\n        throw new TypeError('Expected valid private key');\n    }\n    if (!isWithinCurveOrder(num))\n        throw new Error('Expected private key: 0 < key < n');\n    return num;\n}\nfunction normalizePublicKey(publicKey) {\n    if (publicKey instanceof Point) {\n        publicKey.assertValidity();\n        return publicKey;\n    }\n    else {\n        return Point.fromHex(publicKey);\n    }\n}\nfunction normalizeSignature(signature) {\n    if (signature instanceof Signature) {\n        signature.assertValidity();\n        return signature;\n    }\n    try {\n        return Signature.fromDER(signature);\n    }\n    catch (error) {\n        return Signature.fromCompact(signature);\n    }\n}\nexport function getPublicKey(privateKey, isCompressed = false) {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n}\nexport function recoverPublicKey(msgHash, signature, recovery, isCompressed = false) {\n    return Point.fromSignature(msgHash, signature, recovery).toRawBytes(isCompressed);\n}\nfunction isProbPub(item) {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && item.length;\n    if (arr)\n        return len === compressedLen || len === uncompressedLen;\n    if (str)\n        return len === compressedLen * 2 || len === uncompressedLen * 2;\n    if (item instanceof Point)\n        return true;\n    return false;\n}\nexport function getSharedSecret(privateA, publicB, isCompressed = false) {\n    if (isProbPub(privateA))\n        throw new TypeError('getSharedSecret: first arg must be private key');\n    if (!isProbPub(publicB))\n        throw new TypeError('getSharedSecret: second arg must be public key');\n    const b = normalizePublicKey(publicB);\n    b.assertValidity();\n    return b.multiply(normalizePrivateKey(privateA)).toRawBytes(isCompressed);\n}\nfunction bits2int(bytes) {\n    const slice = bytes.length > fieldLen ? bytes.slice(0, fieldLen) : bytes;\n    return bytesToNumber(slice);\n}\nfunction bits2octets(bytes) {\n    const z1 = bits2int(bytes);\n    const z2 = mod(z1, CURVE.n);\n    return int2octets(z2 < _0n ? z1 : z2);\n}\nfunction int2octets(num) {\n    return numTo32b(num);\n}\nfunction initSigArgs(msgHash, privateKey, extraEntropy) {\n    if (msgHash == null)\n        throw new Error(`sign: expected valid message hash, not \"${msgHash}\"`);\n    const h1 = ensureBytes(msgHash);\n    const d = normalizePrivateKey(privateKey);\n    const seedArgs = [int2octets(d), bits2octets(h1)];\n    if (extraEntropy != null) {\n        if (extraEntropy === true)\n            extraEntropy = utils.randomBytes(fieldLen);\n        const e = ensureBytes(extraEntropy);\n        if (e.length !== fieldLen)\n            throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);\n        seedArgs.push(e);\n    }\n    const seed = concatBytes(...seedArgs);\n    const m = bits2int(h1);\n    return { seed, m, d };\n}\nfunction finalizeSig(recSig, opts) {\n    const { sig, recovery } = recSig;\n    const { der, recovered } = Object.assign({ canonical: true, der: true }, opts);\n    const hashed = der ? sig.toDERRawBytes() : sig.toCompactRawBytes();\n    return recovered ? [hashed, recovery] : hashed;\n}\nasync function sign(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    await drbg.reseed(seed);\n    let sig;\n    while (!(sig = kmdToSig(await drbg.generate(), m, d, opts.canonical)))\n        await drbg.reseed();\n    return finalizeSig(sig, opts);\n}\nfunction signSync(msgHash, privKey, opts = {}) {\n    const { seed, m, d } = initSigArgs(msgHash, privKey, opts.extraEntropy);\n    const drbg = new HmacDrbg(hashLen, groupLen);\n    drbg.reseedSync(seed);\n    let sig;\n    while (!(sig = kmdToSig(drbg.generateSync(), m, d, opts.canonical)))\n        drbg.reseedSync();\n    return finalizeSig(sig, opts);\n}\nexport { sign, signSync };\nconst vopts = { strict: true };\nexport function verify(signature, msgHash, publicKey, opts = vopts) {\n    let sig;\n    try {\n        sig = normalizeSignature(signature);\n        msgHash = ensureBytes(msgHash);\n    }\n    catch (error) {\n        return false;\n    }\n    const { r, s } = sig;\n    if (opts.strict && sig.hasHighS())\n        return false;\n    const h = truncateHash(msgHash);\n    let P;\n    try {\n        P = normalizePublicKey(publicKey);\n    }\n    catch (error) {\n        return false;\n    }\n    const { n } = CURVE;\n    const sinv = invert(s, n);\n    const u1 = mod(h * sinv, n);\n    const u2 = mod(r * sinv, n);\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2);\n    if (!R)\n        return false;\n    const v = mod(R.x, n);\n    return v === r;\n}\nfunction schnorrChallengeFinalize(ch) {\n    return mod(bytesToNumber(ch), CURVE.n);\n}\nclass SchnorrSignature {\n    constructor(r, s) {\n        this.r = r;\n        this.s = s;\n        this.assertValidity();\n    }\n    static fromHex(hex) {\n        const bytes = ensureBytes(hex);\n        if (bytes.length !== 64)\n            throw new TypeError(`SchnorrSignature.fromHex: expected 64 bytes, not ${bytes.length}`);\n        const r = bytesToNumber(bytes.subarray(0, 32));\n        const s = bytesToNumber(bytes.subarray(32, 64));\n        return new SchnorrSignature(r, s);\n    }\n    assertValidity() {\n        const { r, s } = this;\n        if (!isValidFieldElement(r) || !isWithinCurveOrder(s))\n            throw new Error('Invalid signature');\n    }\n    toHex() {\n        return numTo32bStr(this.r) + numTo32bStr(this.s);\n    }\n    toRawBytes() {\n        return hexToBytes(this.toHex());\n    }\n}\nfunction schnorrGetPublicKey(privateKey) {\n    return Point.fromPrivateKey(privateKey).toRawX();\n}\nclass InternalSchnorrSignature {\n    constructor(message, privateKey, auxRand = utils.randomBytes()) {\n        if (message == null)\n            throw new TypeError(`sign: Expected valid message, not \"${message}\"`);\n        this.m = ensureBytes(message);\n        const { x, scalar } = this.getScalar(normalizePrivateKey(privateKey));\n        this.px = x;\n        this.d = scalar;\n        this.rand = ensureBytes(auxRand);\n        if (this.rand.length !== 32)\n            throw new TypeError('sign: Expected 32 bytes of aux randomness');\n    }\n    getScalar(priv) {\n        const point = Point.fromPrivateKey(priv);\n        const scalar = point.hasEvenY() ? priv : CURVE.n - priv;\n        return { point, scalar, x: point.toRawX() };\n    }\n    initNonce(d, t0h) {\n        return numTo32b(d ^ bytesToNumber(t0h));\n    }\n    finalizeNonce(k0h) {\n        const k0 = mod(bytesToNumber(k0h), CURVE.n);\n        if (k0 === _0n)\n            throw new Error('sign: Creation of signature failed. k is zero');\n        const { point: R, x: rx, scalar: k } = this.getScalar(k0);\n        return { R, rx, k };\n    }\n    finalizeSig(R, k, e, d) {\n        return new SchnorrSignature(R.x, mod(k + e * d, CURVE.n)).toRawBytes();\n    }\n    error() {\n        throw new Error('sign: Invalid signature produced');\n    }\n    async calc() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHash;\n        const t = this.initNonce(d, await tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(await tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(await tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!(await schnorrVerify(sig, m, px)))\n            this.error();\n        return sig;\n    }\n    calcSync() {\n        const { m, d, px, rand } = this;\n        const tag = utils.taggedHashSync;\n        const t = this.initNonce(d, tag(TAGS.aux, rand));\n        const { R, rx, k } = this.finalizeNonce(tag(TAGS.nonce, t, px, m));\n        const e = schnorrChallengeFinalize(tag(TAGS.challenge, rx, px, m));\n        const sig = this.finalizeSig(R, k, e, d);\n        if (!schnorrVerifySync(sig, m, px))\n            this.error();\n        return sig;\n    }\n}\nasync function schnorrSign(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calc();\n}\nfunction schnorrSignSync(msg, privKey, auxRand) {\n    return new InternalSchnorrSignature(msg, privKey, auxRand).calcSync();\n}\nfunction initSchnorrVerify(signature, message, publicKey) {\n    const raw = signature instanceof SchnorrSignature;\n    const sig = raw ? signature : SchnorrSignature.fromHex(signature);\n    if (raw)\n        sig.assertValidity();\n    return {\n        ...sig,\n        m: ensureBytes(message),\n        P: normalizePublicKey(publicKey),\n    };\n}\nfunction finalizeSchnorrVerify(r, P, s, e) {\n    const R = Point.BASE.multiplyAndAddUnsafe(P, normalizePrivateKey(s), mod(-e, CURVE.n));\n    if (!R || !R.hasEvenY() || R.x !== r)\n        return false;\n    return true;\n}\nasync function schnorrVerify(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(await utils.taggedHash(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        return false;\n    }\n}\nfunction schnorrVerifySync(signature, message, publicKey) {\n    try {\n        const { r, s, m, P } = initSchnorrVerify(signature, message, publicKey);\n        const e = schnorrChallengeFinalize(utils.taggedHashSync(TAGS.challenge, numTo32b(r), P.toRawX(), m));\n        return finalizeSchnorrVerify(r, P, s, e);\n    }\n    catch (error) {\n        if (error instanceof ShaError)\n            throw error;\n        return false;\n    }\n}\nexport const schnorr = {\n    Signature: SchnorrSignature,\n    getPublicKey: schnorrGetPublicKey,\n    sign: schnorrSign,\n    verify: schnorrVerify,\n    signSync: schnorrSignSync,\n    verifySync: schnorrVerifySync,\n};\nPoint.BASE._setWindowSize(8);\nconst crypto = {\n    node: nodeCrypto,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\nconst TAGS = {\n    challenge: 'BIP0340/challenge',\n    aux: 'BIP0340/aux',\n    nonce: 'BIP0340/nonce',\n};\nconst TAGGED_HASH_PREFIXES = {};\nexport const utils = {\n    bytesToHex,\n    hexToBytes,\n    concatBytes,\n    mod,\n    invert,\n    isValidPrivateKey(privateKey) {\n        try {\n            normalizePrivateKey(privateKey);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    _bigintTo32Bytes: numTo32b,\n    _normalizePrivateKey: normalizePrivateKey,\n    hashToPrivateKey: (hash) => {\n        hash = ensureBytes(hash);\n        const minLen = groupLen + 8;\n        if (hash.length < minLen || hash.length > 1024) {\n            throw new Error(`Expected valid bytes of private key as per FIPS 186`);\n        }\n        const num = mod(bytesToNumber(hash), CURVE.n - _1n) + _1n;\n        return numTo32b(num);\n    },\n    randomBytes: (bytesLength = 32) => {\n        if (crypto.web) {\n            return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n        }\n        else if (crypto.node) {\n            const { randomBytes } = crypto.node;\n            return Uint8Array.from(randomBytes(bytesLength));\n        }\n        else {\n            throw new Error(\"The environment doesn't have randomBytes function\");\n        }\n    },\n    randomPrivateKey: () => utils.hashToPrivateKey(utils.randomBytes(groupLen + 8)),\n    precompute(windowSize = 8, point = Point.BASE) {\n        const cached = point === Point.BASE ? point : new Point(point.x, point.y);\n        cached._setWindowSize(windowSize);\n        cached.multiply(_3n);\n        return cached;\n    },\n    sha256: async (...messages) => {\n        if (crypto.web) {\n            const buffer = await crypto.web.subtle.digest('SHA-256', concatBytes(...messages));\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHash } = crypto.node;\n            const hash = createHash('sha256');\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have sha256 function\");\n        }\n    },\n    hmacSha256: async (key, ...messages) => {\n        if (crypto.web) {\n            const ckey = await crypto.web.subtle.importKey('raw', key, { name: 'HMAC', hash: { name: 'SHA-256' } }, false, ['sign']);\n            const message = concatBytes(...messages);\n            const buffer = await crypto.web.subtle.sign('HMAC', ckey, message);\n            return new Uint8Array(buffer);\n        }\n        else if (crypto.node) {\n            const { createHmac } = crypto.node;\n            const hash = createHmac('sha256', key);\n            messages.forEach((m) => hash.update(m));\n            return Uint8Array.from(hash.digest());\n        }\n        else {\n            throw new Error(\"The environment doesn't have hmac-sha256 function\");\n        }\n    },\n    sha256Sync: undefined,\n    hmacSha256Sync: undefined,\n    taggedHash: async (tag, ...messages) => {\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = await utils.sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return utils.sha256(tagP, ...messages);\n    },\n    taggedHashSync: (tag, ...messages) => {\n        if (typeof _sha256Sync !== 'function')\n            throw new ShaError('sha256Sync is undefined, you need to set it');\n        let tagP = TAGGED_HASH_PREFIXES[tag];\n        if (tagP === undefined) {\n            const tagH = _sha256Sync(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n            tagP = concatBytes(tagH, tagH);\n            TAGGED_HASH_PREFIXES[tag] = tagP;\n        }\n        return _sha256Sync(tagP, ...messages);\n    },\n    _JacobianPoint: JacobianPoint,\n};\nObject.defineProperties(utils, {\n    sha256Sync: {\n        configurable: false,\n        get() {\n            return _sha256Sync;\n        },\n        set(val) {\n            if (!_sha256Sync)\n                _sha256Sync = val;\n        },\n    },\n    hmacSha256Sync: {\n        configurable: false,\n        get() {\n            return _hmacSha256Sync;\n        },\n        set(val) {\n            if (!_hmacSha256Sync)\n                _hmacSha256Sync = val;\n        },\n    },\n});\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst _sha2_js_1 = require(\"./_sha2.js\");\nconst utils_js_1 = require(\"./utils.js\");\n// Choice: a ? b : c\nconst Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends _sha2_js_1.SHA2 {\n    constructor() {\n        super(64, 32, 8, false);\n        // We cannot use array here since array allows indexing by variable\n        // which means optimizer/compiler cannot use registers.\n        this.A = IV[0] | 0;\n        this.B = IV[1] | 0;\n        this.C = IV[2] | 0;\n        this.D = IV[3] | 0;\n        this.E = IV[4] | 0;\n        this.F = IV[5] | 0;\n        this.G = IV[6] | 0;\n        this.H = IV[7] | 0;\n    }\n    get() {\n        const { A, B, C, D, E, F, G, H } = this;\n        return [A, B, C, D, E, F, G, H];\n    }\n    // prettier-ignore\n    set(A, B, C, D, E, F, G, H) {\n        this.A = A | 0;\n        this.B = B | 0;\n        this.C = C | 0;\n        this.D = D | 0;\n        this.E = E | 0;\n        this.F = F | 0;\n        this.G = G | 0;\n        this.H = H | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4)\n            SHA256_W[i] = view.getUint32(offset, false);\n        for (let i = 16; i < 64; i++) {\n            const W15 = SHA256_W[i - 15];\n            const W2 = SHA256_W[i - 2];\n            const s0 = (0, utils_js_1.rotr)(W15, 7) ^ (0, utils_js_1.rotr)(W15, 18) ^ (W15 >>> 3);\n            const s1 = (0, utils_js_1.rotr)(W2, 17) ^ (0, utils_js_1.rotr)(W2, 19) ^ (W2 >>> 10);\n            SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n        }\n        // Compression function main loop, 64 rounds\n        let { A, B, C, D, E, F, G, H } = this;\n        for (let i = 0; i < 64; i++) {\n            const sigma1 = (0, utils_js_1.rotr)(E, 6) ^ (0, utils_js_1.rotr)(E, 11) ^ (0, utils_js_1.rotr)(E, 25);\n            const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const sigma0 = (0, utils_js_1.rotr)(A, 2) ^ (0, utils_js_1.rotr)(A, 13) ^ (0, utils_js_1.rotr)(A, 22);\n            const T2 = (sigma0 + Maj(A, B, C)) | 0;\n            H = G;\n            G = F;\n            F = E;\n            E = (D + T1) | 0;\n            D = C;\n            C = B;\n            B = A;\n            A = (T1 + T2) | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        A = (A + this.A) | 0;\n        B = (B + this.B) | 0;\n        C = (C + this.C) | 0;\n        D = (D + this.D) | 0;\n        E = (E + this.E) | 0;\n        F = (F + this.F) | 0;\n        G = (G + this.G) | 0;\n        H = (H + this.H) | 0;\n        this.set(A, B, C, D, E, F, G, H);\n    }\n    roundClean() {\n        SHA256_W.fill(0);\n    }\n    destroy() {\n        this.set(0, 0, 0, 0, 0, 0, 0, 0);\n        this.buffer.fill(0);\n    }\n}\nexports.sha256 = (0, utils_js_1.wrapConstructor)(() => new SHA256());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SHA2 = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Base SHA2 class (RFC 6234)\nclass SHA2 extends utils_js_1.Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = (0, utils_js_1.createView)(this.buffer);\n    }\n    update(data) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        const { view, buffer, blockLen, finished } = this;\n        if (finished)\n            throw new Error('digest() was already called');\n        data = (0, utils_js_1.toBytes)(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = (0, utils_js_1.createView)(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length < this.outputLen)\n            throw new Error('_Sha2: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // NOTE: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64bit of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = (0, utils_js_1.createView)(out);\n        this.get().forEach((v, i) => oview.setUint32(4 * i, v, isLE));\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\nexports.SHA2 = SHA2;\n","\"use strict\";\n/*! noble-hashes - MIT License (c) 2021 Paul Miller (paulmillr.com) */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.randomBytes = exports.wrapConstructorWithOpts = exports.wrapConstructor = exports.checkOpts = exports.Hash = exports.assertHash = exports.assertBytes = exports.assertBool = exports.assertNumber = exports.concatBytes = exports.toBytes = exports.utf8ToBytes = exports.asyncLoop = exports.nextTick = exports.hexToBytes = exports.bytesToHex = exports.isLE = exports.rotr = exports.createView = exports.u32 = exports.u8 = void 0;\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nconst crypto_1 = require(\"@noble/hashes/crypto\");\n// Cast array to different type\nconst u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.u8 = u8;\nconst u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\nexports.u32 = u32;\n// Cast array to view\nconst createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\nexports.createView = createView;\n// The rotate right (circular right shift) operation for uint32\nconst rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\nexports.rotr = rotr;\nexports.isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianess.\n// So, just to be sure not to corrupt anything.\nif (!exports.isLE)\n    throw new Error('Non little-endian hardware is not supported');\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nfunction bytesToHex(uint8a) {\n    // pre-caching chars could speed this up 6x.\n    let hex = '';\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += hexes[uint8a[i]];\n    }\n    return hex;\n}\nexports.bytesToHex = bytesToHex;\nfunction parseHexByte(hexByte) {\n    if (hexByte.length !== 2)\n        throw new Error('Invalid byte sequence');\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error('Invalid byte sequence');\n    return byte;\n}\n// Buffer.from(hex, 'hex') -> hexToBytes(hex)\nfunction hexToBytes(hex) {\n    if (typeof hex !== 'string') {\n        throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n    }\n    if (hex.length % 2)\n        throw new Error('hexToBytes: received invalid unpadded hex');\n    const array = new Uint8Array(hex.length / 2);\n    for (let i = 0; i < array.length; i++) {\n        const j = i * 2;\n        array[i] = parseHexByte(hex.slice(j, j + 2));\n    }\n    return array;\n}\nexports.hexToBytes = hexToBytes;\n// Currently avoid insertion of polyfills with packers (browserify/webpack/etc)\n// But setTimeout is pretty slow, maybe worth to investigate howto do minimal polyfill here\nexports.nextTick = (() => {\n    const nodeRequire = typeof module !== 'undefined' &&\n        typeof module.require === 'function' &&\n        module.require.bind(module);\n    try {\n        if (nodeRequire) {\n            const { setImmediate } = nodeRequire('timers');\n            return () => new Promise((resolve) => setImmediate(resolve));\n        }\n    }\n    catch (e) { }\n    return () => new Promise((resolve) => setTimeout(resolve, 0));\n})();\n// Returns control to thread each 'tick' ms to avoid blocking\nasync function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await (0, exports.nextTick)();\n        ts += diff;\n    }\n}\nexports.asyncLoop = asyncLoop;\nfunction utf8ToBytes(str) {\n    if (typeof str !== 'string') {\n        throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n    }\n    return new TextEncoder().encode(str);\n}\nexports.utf8ToBytes = utf8ToBytes;\nfunction toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    if (!(data instanceof Uint8Array))\n        throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n    return data;\n}\nexports.toBytes = toBytes;\n// Buffer.concat([buf1, buf2]) -> concatBytes(buf1, buf2)\nfunction concatBytes(...arrays) {\n    if (arrays.length === 1) {\n        return arrays[0];\n    }\n    const length = arrays.reduce((a, arr) => a + arr.length, 0);\n    const result = new Uint8Array(length);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const arr = arrays[i];\n        result.set(arr, pad);\n        pad += arr.length;\n    }\n    return result;\n}\nexports.concatBytes = concatBytes;\nfunction assertNumber(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`Wrong positive integer: ${n}`);\n}\nexports.assertNumber = assertNumber;\nfunction assertBool(b) {\n    if (typeof b !== 'boolean') {\n        throw new Error(`Expected boolean, not ${b}`);\n    }\n}\nexports.assertBool = assertBool;\nfunction assertBytes(bytes, ...lengths) {\n    if (bytes instanceof Uint8Array && (!lengths.length || lengths.includes(bytes.length))) {\n        return;\n    }\n    throw new TypeError(`Expected ${lengths} bytes, not ${typeof bytes} with length=${bytes.length}`);\n}\nexports.assertBytes = assertBytes;\nfunction assertHash(hash) {\n    if (typeof hash !== 'function' || typeof hash.init !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    assertNumber(hash.outputLen);\n    assertNumber(hash.blockLen);\n}\nexports.assertHash = assertHash;\n// For runtime check if class implements interface\nclass Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nexports.Hash = Hash;\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj) => Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\nfunction checkOpts(def, _opts) {\n    if (_opts !== undefined && (typeof _opts !== 'object' || !isPlainObject(_opts)))\n        throw new TypeError('Options should be object or undefined');\n    const opts = Object.assign(def, _opts);\n    return opts;\n}\nexports.checkOpts = checkOpts;\nfunction wrapConstructor(hashConstructor) {\n    const hashC = (message) => hashConstructor().update(toBytes(message)).digest();\n    const tmp = hashConstructor();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashConstructor();\n    hashC.init = hashC.create;\n    return hashC;\n}\nexports.wrapConstructor = wrapConstructor;\nfunction wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    hashC.init = hashC.create;\n    return hashC;\n}\nexports.wrapConstructorWithOpts = wrapConstructorWithOpts;\nfunction randomBytes(bytesLength = 32) {\n    if (crypto_1.crypto.web) {\n        return crypto_1.crypto.web.getRandomValues(new Uint8Array(bytesLength));\n    }\n    else if (crypto_1.crypto.node) {\n        return new Uint8Array(crypto_1.crypto.node.randomBytes(bytesLength).buffer);\n    }\n    else {\n        throw new Error(\"The environment doesn't have randomBytes function\");\n    }\n}\nexports.randomBytes = randomBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = void 0;\nexports.crypto = {\n    node: undefined,\n    web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nexport function assertNumber(n) {\n    if (!Number.isSafeInteger(n))\n        throw new Error(`Wrong integer: ${n}`);\n}\nfunction chain(...args) {\n    const wrap = (a, b) => (c) => a(b(c));\n    const encode = Array.from(args)\n        .reverse()\n        .reduce((acc, i) => (acc ? wrap(acc, i.encode) : i.encode), undefined);\n    const decode = args.reduce((acc, i) => (acc ? wrap(acc, i.decode) : i.decode), undefined);\n    return { encode, decode };\n}\nfunction alphabet(alphabet) {\n    return {\n        encode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('alphabet.encode input should be an array of numbers');\n            return digits.map((i) => {\n                assertNumber(i);\n                if (i < 0 || i >= alphabet.length)\n                    throw new Error(`Digit index outside alphabet: ${i} (alphabet: ${alphabet.length})`);\n                return alphabet[i];\n            });\n        },\n        decode: (input) => {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('alphabet.decode input should be array of strings');\n            return input.map((letter) => {\n                if (typeof letter !== 'string')\n                    throw new Error(`alphabet.decode: not string element=${letter}`);\n                const index = alphabet.indexOf(letter);\n                if (index === -1)\n                    throw new Error(`Unknown letter: \"${letter}\". Allowed: ${alphabet}`);\n                return index;\n            });\n        },\n    };\n}\nfunction join(separator = '') {\n    if (typeof separator !== 'string')\n        throw new Error('join separator should be string');\n    return {\n        encode: (from) => {\n            if (!Array.isArray(from) || (from.length && typeof from[0] !== 'string'))\n                throw new Error('join.encode input should be array of strings');\n            for (let i of from)\n                if (typeof i !== 'string')\n                    throw new Error(`join.encode: non-string input=${i}`);\n            return from.join(separator);\n        },\n        decode: (to) => {\n            if (typeof to !== 'string')\n                throw new Error('join.decode input should be string');\n            return to.split(separator);\n        },\n    };\n}\nfunction padding(bits, chr = '=') {\n    assertNumber(bits);\n    if (typeof chr !== 'string')\n        throw new Error('padding chr should be string');\n    return {\n        encode(data) {\n            if (!Array.isArray(data) || (data.length && typeof data[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of data)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.encode: non-string input=${i}`);\n            while ((data.length * bits) % 8)\n                data.push(chr);\n            return data;\n        },\n        decode(input) {\n            if (!Array.isArray(input) || (input.length && typeof input[0] !== 'string'))\n                throw new Error('padding.encode input should be array of strings');\n            for (let i of input)\n                if (typeof i !== 'string')\n                    throw new Error(`padding.decode: non-string input=${i}`);\n            let end = input.length;\n            if ((end * bits) % 8)\n                throw new Error('Invalid padding: string should have whole number of bytes');\n            for (; end > 0 && input[end - 1] === chr; end--) {\n                if (!(((end - 1) * bits) % 8))\n                    throw new Error('Invalid padding: string has too much padding');\n            }\n            return input.slice(0, end);\n        },\n    };\n}\nfunction normalize(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('normalize fn should be function');\n    return { encode: (from) => from, decode: (to) => fn(to) };\n}\nfunction convertRadix(data, from, to) {\n    if (from < 2)\n        throw new Error(`convertRadix: wrong from=${from}, base cannot be less than 2`);\n    if (to < 2)\n        throw new Error(`convertRadix: wrong to=${to}, base cannot be less than 2`);\n    if (!Array.isArray(data))\n        throw new Error('convertRadix: data should be array');\n    if (!data.length)\n        return [];\n    let pos = 0;\n    const res = [];\n    const digits = Array.from(data);\n    digits.forEach((d) => {\n        assertNumber(d);\n        if (d < 0 || d >= from)\n            throw new Error(`Wrong integer: ${d}`);\n    });\n    while (true) {\n        let carry = 0;\n        let done = true;\n        for (let i = pos; i < digits.length; i++) {\n            const digit = digits[i];\n            const digitBase = from * carry + digit;\n            if (!Number.isSafeInteger(digitBase) ||\n                (from * carry) / from !== carry ||\n                digitBase - digit !== from * carry) {\n                throw new Error('convertRadix: carry overflow');\n            }\n            carry = digitBase % to;\n            digits[i] = Math.floor(digitBase / to);\n            if (!Number.isSafeInteger(digits[i]) || digits[i] * to + carry !== digitBase)\n                throw new Error('convertRadix: carry overflow');\n            if (!done)\n                continue;\n            else if (!digits[i])\n                pos = i;\n            else\n                done = false;\n        }\n        res.push(carry);\n        if (done)\n            break;\n    }\n    for (let i = 0; i < data.length - 1 && data[i] === 0; i++)\n        res.push(0);\n    return res.reverse();\n}\nconst gcd = (a, b) => (!b ? a : gcd(b, a % b));\nconst radix2carry = (from, to) => from + (to - gcd(from, to));\nfunction convertRadix2(data, from, to, padding) {\n    if (!Array.isArray(data))\n        throw new Error('convertRadix2: data should be array');\n    if (from <= 0 || from > 32)\n        throw new Error(`convertRadix2: wrong from=${from}`);\n    if (to <= 0 || to > 32)\n        throw new Error(`convertRadix2: wrong to=${to}`);\n    if (radix2carry(from, to) > 32) {\n        throw new Error(`convertRadix2: carry overflow from=${from} to=${to} carryBits=${radix2carry(from, to)}`);\n    }\n    let carry = 0;\n    let pos = 0;\n    const mask = 2 ** to - 1;\n    const res = [];\n    for (const n of data) {\n        assertNumber(n);\n        if (n >= 2 ** from)\n            throw new Error(`convertRadix2: invalid data word=${n} from=${from}`);\n        carry = (carry << from) | n;\n        if (pos + from > 32)\n            throw new Error(`convertRadix2: carry overflow pos=${pos} from=${from}`);\n        pos += from;\n        for (; pos >= to; pos -= to)\n            res.push(((carry >> (pos - to)) & mask) >>> 0);\n        carry &= 2 ** pos - 1;\n    }\n    carry = (carry << (to - pos)) & mask;\n    if (!padding && pos >= from)\n        throw new Error('Excess padding');\n    if (!padding && carry)\n        throw new Error(`Non-zero padding: ${carry}`);\n    if (padding && pos > 0)\n        res.push(carry >>> 0);\n    return res;\n}\nfunction radix(num) {\n    assertNumber(num);\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix.encode input should be Uint8Array');\n            return convertRadix(Array.from(bytes), 2 ** 8, num);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix.decode input should be array of strings');\n            return Uint8Array.from(convertRadix(digits, num, 2 ** 8));\n        },\n    };\n}\nfunction radix2(bits, revPadding = false) {\n    assertNumber(bits);\n    if (bits <= 0 || bits > 32)\n        throw new Error('radix2: bits should be in (0..32]');\n    if (radix2carry(8, bits) > 32 || radix2carry(bits, 8) > 32)\n        throw new Error('radix2: carry overflow');\n    return {\n        encode: (bytes) => {\n            if (!(bytes instanceof Uint8Array))\n                throw new Error('radix2.encode input should be Uint8Array');\n            return convertRadix2(Array.from(bytes), 8, bits, !revPadding);\n        },\n        decode: (digits) => {\n            if (!Array.isArray(digits) || (digits.length && typeof digits[0] !== 'number'))\n                throw new Error('radix2.decode input should be array of strings');\n            return Uint8Array.from(convertRadix2(digits, bits, 8, revPadding));\n        },\n    };\n}\nfunction unsafeWrapper(fn) {\n    if (typeof fn !== 'function')\n        throw new Error('unsafeWrapper fn should be function');\n    return function (...args) {\n        try {\n            return fn.apply(null, args);\n        }\n        catch (e) { }\n    };\n}\nfunction checksum(len, fn) {\n    assertNumber(len);\n    if (typeof fn !== 'function')\n        throw new Error('checksum fn should be function');\n    return {\n        encode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.encode: input should be Uint8Array');\n            const checksum = fn(data).slice(0, len);\n            const res = new Uint8Array(data.length + len);\n            res.set(data);\n            res.set(checksum, data.length);\n            return res;\n        },\n        decode(data) {\n            if (!(data instanceof Uint8Array))\n                throw new Error('checksum.decode: input should be Uint8Array');\n            const payload = data.slice(0, -len);\n            const newChecksum = fn(payload).slice(0, len);\n            const oldChecksum = data.slice(-len);\n            for (let i = 0; i < len; i++)\n                if (newChecksum[i] !== oldChecksum[i])\n                    throw new Error('Invalid checksum');\n            return payload;\n        },\n    };\n}\nexport const utils = { alphabet, chain, checksum, radix, radix2, join, padding };\nexport const base16 = chain(radix2(4), alphabet('0123456789ABCDEF'), join(''));\nexport const base32 = chain(radix2(5), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZ234567'), padding(5), join(''));\nexport const base32hex = chain(radix2(5), alphabet('0123456789ABCDEFGHIJKLMNOPQRSTUV'), padding(5), join(''));\nexport const base32crockford = chain(radix2(5), alphabet('0123456789ABCDEFGHJKMNPQRSTVWXYZ'), join(''), normalize((s) => s.toUpperCase().replace(/O/g, '0').replace(/[IL]/g, '1')));\nexport const base64 = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'), padding(6), join(''));\nexport const base64url = chain(radix2(6), alphabet('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_'), padding(6), join(''));\nconst genBase58 = (abc) => chain(radix(58), alphabet(abc), join(''));\nexport const base58 = genBase58('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\nexport const base58flickr = genBase58('123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ');\nexport const base58xrp = genBase58('rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz');\nconst XMR_BLOCK_LEN = [0, 2, 3, 5, 6, 7, 9, 10, 11];\nexport const base58xmr = {\n    encode(data) {\n        let res = '';\n        for (let i = 0; i < data.length; i += 8) {\n            const block = data.subarray(i, i + 8);\n            res += base58.encode(block).padStart(XMR_BLOCK_LEN[block.length], '1');\n        }\n        return res;\n    },\n    decode(str) {\n        let res = [];\n        for (let i = 0; i < str.length; i += 11) {\n            const slice = str.slice(i, i + 11);\n            const blockLen = XMR_BLOCK_LEN.indexOf(slice.length);\n            const block = base58.decode(slice);\n            for (let j = 0; j < block.length - blockLen; j++) {\n                if (block[j] !== 0)\n                    throw new Error('base58xmr: wrong padding');\n            }\n            res = res.concat(Array.from(block.slice(block.length - blockLen)));\n        }\n        return Uint8Array.from(res);\n    },\n};\nexport const base58check = (sha256) => chain(checksum(4, (data) => sha256(sha256(data))), base58);\nconst BECH_ALPHABET = chain(alphabet('qpzry9x8gf2tvdw0s3jn54khce6mua7l'), join(''));\nconst POLYMOD_GENERATORS = [0x3b6a57b2, 0x26508e6d, 0x1ea119fa, 0x3d4233dd, 0x2a1462b3];\nfunction bech32Polymod(pre) {\n    const b = pre >> 25;\n    let chk = (pre & 0x1ffffff) << 5;\n    for (let i = 0; i < POLYMOD_GENERATORS.length; i++) {\n        if (((b >> i) & 1) === 1)\n            chk ^= POLYMOD_GENERATORS[i];\n    }\n    return chk;\n}\nfunction bechChecksum(prefix, words, encodingConst = 1) {\n    const len = prefix.length;\n    let chk = 1;\n    for (let i = 0; i < len; i++) {\n        const c = prefix.charCodeAt(i);\n        if (c < 33 || c > 126)\n            throw new Error(`Invalid prefix (${prefix})`);\n        chk = bech32Polymod(chk) ^ (c >> 5);\n    }\n    chk = bech32Polymod(chk);\n    for (let i = 0; i < len; i++)\n        chk = bech32Polymod(chk) ^ (prefix.charCodeAt(i) & 0x1f);\n    for (let v of words)\n        chk = bech32Polymod(chk) ^ v;\n    for (let i = 0; i < 6; i++)\n        chk = bech32Polymod(chk);\n    chk ^= encodingConst;\n    return BECH_ALPHABET.encode(convertRadix2([chk % 2 ** 30], 30, 5, false));\n}\nfunction genBech32(encoding) {\n    const ENCODING_CONST = encoding === 'bech32' ? 1 : 0x2bc830a3;\n    const _words = radix2(5);\n    const fromWords = _words.decode;\n    const toWords = _words.encode;\n    const fromWordsUnsafe = unsafeWrapper(fromWords);\n    function encode(prefix, words, limit = 90) {\n        if (typeof prefix !== 'string')\n            throw new Error(`bech32.encode prefix should be string, not ${typeof prefix}`);\n        if (!Array.isArray(words) || (words.length && typeof words[0] !== 'number'))\n            throw new Error(`bech32.encode words should be array of numbers, not ${typeof words}`);\n        const actualLength = prefix.length + 7 + words.length;\n        if (limit !== false && actualLength > limit)\n            throw new TypeError(`Length ${actualLength} exceeds limit ${limit}`);\n        prefix = prefix.toLowerCase();\n        return `${prefix}1${BECH_ALPHABET.encode(words)}${bechChecksum(prefix, words, ENCODING_CONST)}`;\n    }\n    function decode(str, limit = 90) {\n        if (typeof str !== 'string')\n            throw new Error(`bech32.decode input should be string, not ${typeof str}`);\n        if (str.length < 8 || (limit !== false && str.length > limit))\n            throw new TypeError(`Wrong string length: ${str.length} (${str}). Expected (8..${limit})`);\n        const lowered = str.toLowerCase();\n        if (str !== lowered && str !== str.toUpperCase())\n            throw new Error(`String must be lowercase or uppercase`);\n        str = lowered;\n        const sepIndex = str.lastIndexOf('1');\n        if (sepIndex === 0 || sepIndex === -1)\n            throw new Error(`Letter \"1\" must be present between prefix and data only`);\n        const prefix = str.slice(0, sepIndex);\n        const _words = str.slice(sepIndex + 1);\n        if (_words.length < 6)\n            throw new Error('Data must be at least 6 characters long');\n        const words = BECH_ALPHABET.decode(_words).slice(0, -6);\n        const sum = bechChecksum(prefix, words, ENCODING_CONST);\n        if (!_words.endsWith(sum))\n            throw new Error(`Invalid checksum in ${str}: expected \"${sum}\"`);\n        return { prefix, words };\n    }\n    const decodeUnsafe = unsafeWrapper(decode);\n    function decodeToBytes(str) {\n        const { prefix, words } = decode(str, false);\n        return { prefix, words, bytes: fromWords(words) };\n    }\n    return { encode, decode, decodeToBytes, decodeUnsafe, fromWords, fromWordsUnsafe, toWords };\n}\nexport const bech32 = genBech32('bech32');\nexport const bech32m = genBech32('bech32m');\nexport const utf8 = {\n    encode: (data) => new TextDecoder().decode(data),\n    decode: (str) => new TextEncoder().encode(str),\n};\nexport const hex = chain(radix2(4), alphabet('0123456789abcdef'), join(''), normalize((s) => {\n    if (typeof s !== 'string' || s.length % 2)\n        throw new TypeError(`hex.decode: expected string, got ${typeof s} with length ${s.length}`);\n    return s.toLowerCase();\n}));\nconst CODERS = {\n    utf8, hex, base16, base32, base64, base64url, base58, base58xmr\n};\nconst coderTypeError = `Invalid encoding type. Available types: ${Object.keys(CODERS).join(', ')}`;\nexport const bytesToString = (type, bytes) => {\n    if (typeof type !== 'string' || !CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (!(bytes instanceof Uint8Array))\n        throw new TypeError('bytesToString() expects Uint8Array');\n    return CODERS[type].encode(bytes);\n};\nexport const str = bytesToString;\nexport const stringToBytes = (type, str) => {\n    if (!CODERS.hasOwnProperty(type))\n        throw new TypeError(coderTypeError);\n    if (typeof str !== 'string')\n        throw new TypeError('stringToBytes() expects string');\n    return CODERS[type].decode(str);\n};\nexport const bytes = stringToBytes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.wordlist = void 0;\nexports.wordlist = `abandon\nability\nable\nabout\nabove\nabsent\nabsorb\nabstract\nabsurd\nabuse\naccess\naccident\naccount\naccuse\nachieve\nacid\nacoustic\nacquire\nacross\nact\naction\nactor\nactress\nactual\nadapt\nadd\naddict\naddress\nadjust\nadmit\nadult\nadvance\nadvice\naerobic\naffair\nafford\nafraid\nagain\nage\nagent\nagree\nahead\naim\nair\nairport\naisle\nalarm\nalbum\nalcohol\nalert\nalien\nall\nalley\nallow\nalmost\nalone\nalpha\nalready\nalso\nalter\nalways\namateur\namazing\namong\namount\namused\nanalyst\nanchor\nancient\nanger\nangle\nangry\nanimal\nankle\nannounce\nannual\nanother\nanswer\nantenna\nantique\nanxiety\nany\napart\napology\nappear\napple\napprove\napril\narch\narctic\narea\narena\nargue\narm\narmed\narmor\narmy\naround\narrange\narrest\narrive\narrow\nart\nartefact\nartist\nartwork\nask\naspect\nassault\nasset\nassist\nassume\nasthma\nathlete\natom\nattack\nattend\nattitude\nattract\nauction\naudit\naugust\naunt\nauthor\nauto\nautumn\naverage\navocado\navoid\nawake\naware\naway\nawesome\nawful\nawkward\naxis\nbaby\nbachelor\nbacon\nbadge\nbag\nbalance\nbalcony\nball\nbamboo\nbanana\nbanner\nbar\nbarely\nbargain\nbarrel\nbase\nbasic\nbasket\nbattle\nbeach\nbean\nbeauty\nbecause\nbecome\nbeef\nbefore\nbegin\nbehave\nbehind\nbelieve\nbelow\nbelt\nbench\nbenefit\nbest\nbetray\nbetter\nbetween\nbeyond\nbicycle\nbid\nbike\nbind\nbiology\nbird\nbirth\nbitter\nblack\nblade\nblame\nblanket\nblast\nbleak\nbless\nblind\nblood\nblossom\nblouse\nblue\nblur\nblush\nboard\nboat\nbody\nboil\nbomb\nbone\nbonus\nbook\nboost\nborder\nboring\nborrow\nboss\nbottom\nbounce\nbox\nboy\nbracket\nbrain\nbrand\nbrass\nbrave\nbread\nbreeze\nbrick\nbridge\nbrief\nbright\nbring\nbrisk\nbroccoli\nbroken\nbronze\nbroom\nbrother\nbrown\nbrush\nbubble\nbuddy\nbudget\nbuffalo\nbuild\nbulb\nbulk\nbullet\nbundle\nbunker\nburden\nburger\nburst\nbus\nbusiness\nbusy\nbutter\nbuyer\nbuzz\ncabbage\ncabin\ncable\ncactus\ncage\ncake\ncall\ncalm\ncamera\ncamp\ncan\ncanal\ncancel\ncandy\ncannon\ncanoe\ncanvas\ncanyon\ncapable\ncapital\ncaptain\ncar\ncarbon\ncard\ncargo\ncarpet\ncarry\ncart\ncase\ncash\ncasino\ncastle\ncasual\ncat\ncatalog\ncatch\ncategory\ncattle\ncaught\ncause\ncaution\ncave\nceiling\ncelery\ncement\ncensus\ncentury\ncereal\ncertain\nchair\nchalk\nchampion\nchange\nchaos\nchapter\ncharge\nchase\nchat\ncheap\ncheck\ncheese\nchef\ncherry\nchest\nchicken\nchief\nchild\nchimney\nchoice\nchoose\nchronic\nchuckle\nchunk\nchurn\ncigar\ncinnamon\ncircle\ncitizen\ncity\ncivil\nclaim\nclap\nclarify\nclaw\nclay\nclean\nclerk\nclever\nclick\nclient\ncliff\nclimb\nclinic\nclip\nclock\nclog\nclose\ncloth\ncloud\nclown\nclub\nclump\ncluster\nclutch\ncoach\ncoast\ncoconut\ncode\ncoffee\ncoil\ncoin\ncollect\ncolor\ncolumn\ncombine\ncome\ncomfort\ncomic\ncommon\ncompany\nconcert\nconduct\nconfirm\ncongress\nconnect\nconsider\ncontrol\nconvince\ncook\ncool\ncopper\ncopy\ncoral\ncore\ncorn\ncorrect\ncost\ncotton\ncouch\ncountry\ncouple\ncourse\ncousin\ncover\ncoyote\ncrack\ncradle\ncraft\ncram\ncrane\ncrash\ncrater\ncrawl\ncrazy\ncream\ncredit\ncreek\ncrew\ncricket\ncrime\ncrisp\ncritic\ncrop\ncross\ncrouch\ncrowd\ncrucial\ncruel\ncruise\ncrumble\ncrunch\ncrush\ncry\ncrystal\ncube\nculture\ncup\ncupboard\ncurious\ncurrent\ncurtain\ncurve\ncushion\ncustom\ncute\ncycle\ndad\ndamage\ndamp\ndance\ndanger\ndaring\ndash\ndaughter\ndawn\nday\ndeal\ndebate\ndebris\ndecade\ndecember\ndecide\ndecline\ndecorate\ndecrease\ndeer\ndefense\ndefine\ndefy\ndegree\ndelay\ndeliver\ndemand\ndemise\ndenial\ndentist\ndeny\ndepart\ndepend\ndeposit\ndepth\ndeputy\nderive\ndescribe\ndesert\ndesign\ndesk\ndespair\ndestroy\ndetail\ndetect\ndevelop\ndevice\ndevote\ndiagram\ndial\ndiamond\ndiary\ndice\ndiesel\ndiet\ndiffer\ndigital\ndignity\ndilemma\ndinner\ndinosaur\ndirect\ndirt\ndisagree\ndiscover\ndisease\ndish\ndismiss\ndisorder\ndisplay\ndistance\ndivert\ndivide\ndivorce\ndizzy\ndoctor\ndocument\ndog\ndoll\ndolphin\ndomain\ndonate\ndonkey\ndonor\ndoor\ndose\ndouble\ndove\ndraft\ndragon\ndrama\ndrastic\ndraw\ndream\ndress\ndrift\ndrill\ndrink\ndrip\ndrive\ndrop\ndrum\ndry\nduck\ndumb\ndune\nduring\ndust\ndutch\nduty\ndwarf\ndynamic\neager\neagle\nearly\nearn\nearth\neasily\neast\neasy\necho\necology\neconomy\nedge\nedit\neducate\neffort\negg\neight\neither\nelbow\nelder\nelectric\nelegant\nelement\nelephant\nelevator\nelite\nelse\nembark\nembody\nembrace\nemerge\nemotion\nemploy\nempower\nempty\nenable\nenact\nend\nendless\nendorse\nenemy\nenergy\nenforce\nengage\nengine\nenhance\nenjoy\nenlist\nenough\nenrich\nenroll\nensure\nenter\nentire\nentry\nenvelope\nepisode\nequal\nequip\nera\nerase\nerode\nerosion\nerror\nerupt\nescape\nessay\nessence\nestate\neternal\nethics\nevidence\nevil\nevoke\nevolve\nexact\nexample\nexcess\nexchange\nexcite\nexclude\nexcuse\nexecute\nexercise\nexhaust\nexhibit\nexile\nexist\nexit\nexotic\nexpand\nexpect\nexpire\nexplain\nexpose\nexpress\nextend\nextra\neye\neyebrow\nfabric\nface\nfaculty\nfade\nfaint\nfaith\nfall\nfalse\nfame\nfamily\nfamous\nfan\nfancy\nfantasy\nfarm\nfashion\nfat\nfatal\nfather\nfatigue\nfault\nfavorite\nfeature\nfebruary\nfederal\nfee\nfeed\nfeel\nfemale\nfence\nfestival\nfetch\nfever\nfew\nfiber\nfiction\nfield\nfigure\nfile\nfilm\nfilter\nfinal\nfind\nfine\nfinger\nfinish\nfire\nfirm\nfirst\nfiscal\nfish\nfit\nfitness\nfix\nflag\nflame\nflash\nflat\nflavor\nflee\nflight\nflip\nfloat\nflock\nfloor\nflower\nfluid\nflush\nfly\nfoam\nfocus\nfog\nfoil\nfold\nfollow\nfood\nfoot\nforce\nforest\nforget\nfork\nfortune\nforum\nforward\nfossil\nfoster\nfound\nfox\nfragile\nframe\nfrequent\nfresh\nfriend\nfringe\nfrog\nfront\nfrost\nfrown\nfrozen\nfruit\nfuel\nfun\nfunny\nfurnace\nfury\nfuture\ngadget\ngain\ngalaxy\ngallery\ngame\ngap\ngarage\ngarbage\ngarden\ngarlic\ngarment\ngas\ngasp\ngate\ngather\ngauge\ngaze\ngeneral\ngenius\ngenre\ngentle\ngenuine\ngesture\nghost\ngiant\ngift\ngiggle\nginger\ngiraffe\ngirl\ngive\nglad\nglance\nglare\nglass\nglide\nglimpse\nglobe\ngloom\nglory\nglove\nglow\nglue\ngoat\ngoddess\ngold\ngood\ngoose\ngorilla\ngospel\ngossip\ngovern\ngown\ngrab\ngrace\ngrain\ngrant\ngrape\ngrass\ngravity\ngreat\ngreen\ngrid\ngrief\ngrit\ngrocery\ngroup\ngrow\ngrunt\nguard\nguess\nguide\nguilt\nguitar\ngun\ngym\nhabit\nhair\nhalf\nhammer\nhamster\nhand\nhappy\nharbor\nhard\nharsh\nharvest\nhat\nhave\nhawk\nhazard\nhead\nhealth\nheart\nheavy\nhedgehog\nheight\nhello\nhelmet\nhelp\nhen\nhero\nhidden\nhigh\nhill\nhint\nhip\nhire\nhistory\nhobby\nhockey\nhold\nhole\nholiday\nhollow\nhome\nhoney\nhood\nhope\nhorn\nhorror\nhorse\nhospital\nhost\nhotel\nhour\nhover\nhub\nhuge\nhuman\nhumble\nhumor\nhundred\nhungry\nhunt\nhurdle\nhurry\nhurt\nhusband\nhybrid\nice\nicon\nidea\nidentify\nidle\nignore\nill\nillegal\nillness\nimage\nimitate\nimmense\nimmune\nimpact\nimpose\nimprove\nimpulse\ninch\ninclude\nincome\nincrease\nindex\nindicate\nindoor\nindustry\ninfant\ninflict\ninform\ninhale\ninherit\ninitial\ninject\ninjury\ninmate\ninner\ninnocent\ninput\ninquiry\ninsane\ninsect\ninside\ninspire\ninstall\nintact\ninterest\ninto\ninvest\ninvite\ninvolve\niron\nisland\nisolate\nissue\nitem\nivory\njacket\njaguar\njar\njazz\njealous\njeans\njelly\njewel\njob\njoin\njoke\njourney\njoy\njudge\njuice\njump\njungle\njunior\njunk\njust\nkangaroo\nkeen\nkeep\nketchup\nkey\nkick\nkid\nkidney\nkind\nkingdom\nkiss\nkit\nkitchen\nkite\nkitten\nkiwi\nknee\nknife\nknock\nknow\nlab\nlabel\nlabor\nladder\nlady\nlake\nlamp\nlanguage\nlaptop\nlarge\nlater\nlatin\nlaugh\nlaundry\nlava\nlaw\nlawn\nlawsuit\nlayer\nlazy\nleader\nleaf\nlearn\nleave\nlecture\nleft\nleg\nlegal\nlegend\nleisure\nlemon\nlend\nlength\nlens\nleopard\nlesson\nletter\nlevel\nliar\nliberty\nlibrary\nlicense\nlife\nlift\nlight\nlike\nlimb\nlimit\nlink\nlion\nliquid\nlist\nlittle\nlive\nlizard\nload\nloan\nlobster\nlocal\nlock\nlogic\nlonely\nlong\nloop\nlottery\nloud\nlounge\nlove\nloyal\nlucky\nluggage\nlumber\nlunar\nlunch\nluxury\nlyrics\nmachine\nmad\nmagic\nmagnet\nmaid\nmail\nmain\nmajor\nmake\nmammal\nman\nmanage\nmandate\nmango\nmansion\nmanual\nmaple\nmarble\nmarch\nmargin\nmarine\nmarket\nmarriage\nmask\nmass\nmaster\nmatch\nmaterial\nmath\nmatrix\nmatter\nmaximum\nmaze\nmeadow\nmean\nmeasure\nmeat\nmechanic\nmedal\nmedia\nmelody\nmelt\nmember\nmemory\nmention\nmenu\nmercy\nmerge\nmerit\nmerry\nmesh\nmessage\nmetal\nmethod\nmiddle\nmidnight\nmilk\nmillion\nmimic\nmind\nminimum\nminor\nminute\nmiracle\nmirror\nmisery\nmiss\nmistake\nmix\nmixed\nmixture\nmobile\nmodel\nmodify\nmom\nmoment\nmonitor\nmonkey\nmonster\nmonth\nmoon\nmoral\nmore\nmorning\nmosquito\nmother\nmotion\nmotor\nmountain\nmouse\nmove\nmovie\nmuch\nmuffin\nmule\nmultiply\nmuscle\nmuseum\nmushroom\nmusic\nmust\nmutual\nmyself\nmystery\nmyth\nnaive\nname\nnapkin\nnarrow\nnasty\nnation\nnature\nnear\nneck\nneed\nnegative\nneglect\nneither\nnephew\nnerve\nnest\nnet\nnetwork\nneutral\nnever\nnews\nnext\nnice\nnight\nnoble\nnoise\nnominee\nnoodle\nnormal\nnorth\nnose\nnotable\nnote\nnothing\nnotice\nnovel\nnow\nnuclear\nnumber\nnurse\nnut\noak\nobey\nobject\noblige\nobscure\nobserve\nobtain\nobvious\noccur\nocean\noctober\nodor\noff\noffer\noffice\noften\noil\nokay\nold\nolive\nolympic\nomit\nonce\none\nonion\nonline\nonly\nopen\nopera\nopinion\noppose\noption\norange\norbit\norchard\norder\nordinary\norgan\norient\noriginal\norphan\nostrich\nother\noutdoor\nouter\noutput\noutside\noval\noven\nover\nown\nowner\noxygen\noyster\nozone\npact\npaddle\npage\npair\npalace\npalm\npanda\npanel\npanic\npanther\npaper\nparade\nparent\npark\nparrot\nparty\npass\npatch\npath\npatient\npatrol\npattern\npause\npave\npayment\npeace\npeanut\npear\npeasant\npelican\npen\npenalty\npencil\npeople\npepper\nperfect\npermit\nperson\npet\nphone\nphoto\nphrase\nphysical\npiano\npicnic\npicture\npiece\npig\npigeon\npill\npilot\npink\npioneer\npipe\npistol\npitch\npizza\nplace\nplanet\nplastic\nplate\nplay\nplease\npledge\npluck\nplug\nplunge\npoem\npoet\npoint\npolar\npole\npolice\npond\npony\npool\npopular\nportion\nposition\npossible\npost\npotato\npottery\npoverty\npowder\npower\npractice\npraise\npredict\nprefer\nprepare\npresent\npretty\nprevent\nprice\npride\nprimary\nprint\npriority\nprison\nprivate\nprize\nproblem\nprocess\nproduce\nprofit\nprogram\nproject\npromote\nproof\nproperty\nprosper\nprotect\nproud\nprovide\npublic\npudding\npull\npulp\npulse\npumpkin\npunch\npupil\npuppy\npurchase\npurity\npurpose\npurse\npush\nput\npuzzle\npyramid\nquality\nquantum\nquarter\nquestion\nquick\nquit\nquiz\nquote\nrabbit\nraccoon\nrace\nrack\nradar\nradio\nrail\nrain\nraise\nrally\nramp\nranch\nrandom\nrange\nrapid\nrare\nrate\nrather\nraven\nraw\nrazor\nready\nreal\nreason\nrebel\nrebuild\nrecall\nreceive\nrecipe\nrecord\nrecycle\nreduce\nreflect\nreform\nrefuse\nregion\nregret\nregular\nreject\nrelax\nrelease\nrelief\nrely\nremain\nremember\nremind\nremove\nrender\nrenew\nrent\nreopen\nrepair\nrepeat\nreplace\nreport\nrequire\nrescue\nresemble\nresist\nresource\nresponse\nresult\nretire\nretreat\nreturn\nreunion\nreveal\nreview\nreward\nrhythm\nrib\nribbon\nrice\nrich\nride\nridge\nrifle\nright\nrigid\nring\nriot\nripple\nrisk\nritual\nrival\nriver\nroad\nroast\nrobot\nrobust\nrocket\nromance\nroof\nrookie\nroom\nrose\nrotate\nrough\nround\nroute\nroyal\nrubber\nrude\nrug\nrule\nrun\nrunway\nrural\nsad\nsaddle\nsadness\nsafe\nsail\nsalad\nsalmon\nsalon\nsalt\nsalute\nsame\nsample\nsand\nsatisfy\nsatoshi\nsauce\nsausage\nsave\nsay\nscale\nscan\nscare\nscatter\nscene\nscheme\nschool\nscience\nscissors\nscorpion\nscout\nscrap\nscreen\nscript\nscrub\nsea\nsearch\nseason\nseat\nsecond\nsecret\nsection\nsecurity\nseed\nseek\nsegment\nselect\nsell\nseminar\nsenior\nsense\nsentence\nseries\nservice\nsession\nsettle\nsetup\nseven\nshadow\nshaft\nshallow\nshare\nshed\nshell\nsheriff\nshield\nshift\nshine\nship\nshiver\nshock\nshoe\nshoot\nshop\nshort\nshoulder\nshove\nshrimp\nshrug\nshuffle\nshy\nsibling\nsick\nside\nsiege\nsight\nsign\nsilent\nsilk\nsilly\nsilver\nsimilar\nsimple\nsince\nsing\nsiren\nsister\nsituate\nsix\nsize\nskate\nsketch\nski\nskill\nskin\nskirt\nskull\nslab\nslam\nsleep\nslender\nslice\nslide\nslight\nslim\nslogan\nslot\nslow\nslush\nsmall\nsmart\nsmile\nsmoke\nsmooth\nsnack\nsnake\nsnap\nsniff\nsnow\nsoap\nsoccer\nsocial\nsock\nsoda\nsoft\nsolar\nsoldier\nsolid\nsolution\nsolve\nsomeone\nsong\nsoon\nsorry\nsort\nsoul\nsound\nsoup\nsource\nsouth\nspace\nspare\nspatial\nspawn\nspeak\nspecial\nspeed\nspell\nspend\nsphere\nspice\nspider\nspike\nspin\nspirit\nsplit\nspoil\nsponsor\nspoon\nsport\nspot\nspray\nspread\nspring\nspy\nsquare\nsqueeze\nsquirrel\nstable\nstadium\nstaff\nstage\nstairs\nstamp\nstand\nstart\nstate\nstay\nsteak\nsteel\nstem\nstep\nstereo\nstick\nstill\nsting\nstock\nstomach\nstone\nstool\nstory\nstove\nstrategy\nstreet\nstrike\nstrong\nstruggle\nstudent\nstuff\nstumble\nstyle\nsubject\nsubmit\nsubway\nsuccess\nsuch\nsudden\nsuffer\nsugar\nsuggest\nsuit\nsummer\nsun\nsunny\nsunset\nsuper\nsupply\nsupreme\nsure\nsurface\nsurge\nsurprise\nsurround\nsurvey\nsuspect\nsustain\nswallow\nswamp\nswap\nswarm\nswear\nsweet\nswift\nswim\nswing\nswitch\nsword\nsymbol\nsymptom\nsyrup\nsystem\ntable\ntackle\ntag\ntail\ntalent\ntalk\ntank\ntape\ntarget\ntask\ntaste\ntattoo\ntaxi\nteach\nteam\ntell\nten\ntenant\ntennis\ntent\nterm\ntest\ntext\nthank\nthat\ntheme\nthen\ntheory\nthere\nthey\nthing\nthis\nthought\nthree\nthrive\nthrow\nthumb\nthunder\nticket\ntide\ntiger\ntilt\ntimber\ntime\ntiny\ntip\ntired\ntissue\ntitle\ntoast\ntobacco\ntoday\ntoddler\ntoe\ntogether\ntoilet\ntoken\ntomato\ntomorrow\ntone\ntongue\ntonight\ntool\ntooth\ntop\ntopic\ntopple\ntorch\ntornado\ntortoise\ntoss\ntotal\ntourist\ntoward\ntower\ntown\ntoy\ntrack\ntrade\ntraffic\ntragic\ntrain\ntransfer\ntrap\ntrash\ntravel\ntray\ntreat\ntree\ntrend\ntrial\ntribe\ntrick\ntrigger\ntrim\ntrip\ntrophy\ntrouble\ntruck\ntrue\ntruly\ntrumpet\ntrust\ntruth\ntry\ntube\ntuition\ntumble\ntuna\ntunnel\nturkey\nturn\nturtle\ntwelve\ntwenty\ntwice\ntwin\ntwist\ntwo\ntype\ntypical\nugly\numbrella\nunable\nunaware\nuncle\nuncover\nunder\nundo\nunfair\nunfold\nunhappy\nuniform\nunique\nunit\nuniverse\nunknown\nunlock\nuntil\nunusual\nunveil\nupdate\nupgrade\nuphold\nupon\nupper\nupset\nurban\nurge\nusage\nuse\nused\nuseful\nuseless\nusual\nutility\nvacant\nvacuum\nvague\nvalid\nvalley\nvalve\nvan\nvanish\nvapor\nvarious\nvast\nvault\nvehicle\nvelvet\nvendor\nventure\nvenue\nverb\nverify\nversion\nvery\nvessel\nveteran\nviable\nvibrant\nvicious\nvictory\nvideo\nview\nvillage\nvintage\nviolin\nvirtual\nvirus\nvisa\nvisit\nvisual\nvital\nvivid\nvocal\nvoice\nvoid\nvolcano\nvolume\nvote\nvoyage\nwage\nwagon\nwait\nwalk\nwall\nwalnut\nwant\nwarfare\nwarm\nwarrior\nwash\nwasp\nwaste\nwater\nwave\nway\nwealth\nweapon\nwear\nweasel\nweather\nweb\nwedding\nweekend\nweird\nwelcome\nwest\nwet\nwhale\nwhat\nwheat\nwheel\nwhen\nwhere\nwhip\nwhisper\nwide\nwidth\nwife\nwild\nwill\nwin\nwindow\nwine\nwing\nwink\nwinner\nwinter\nwire\nwisdom\nwise\nwish\nwitness\nwolf\nwoman\nwonder\nwood\nwool\nword\nwork\nworld\nworry\nworth\nwrap\nwreck\nwrestle\nwrist\nwrite\nwrong\nyard\nyear\nyellow\nyou\nyoung\nyouth\nzebra\nzero\nzone\nzoo`.split('\\n');\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mnemonicToSeedSync = exports.mnemonicToSeed = exports.validateMnemonic = exports.entropyToMnemonic = exports.mnemonicToEntropy = exports.generateMnemonic = void 0;\n/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nconst _assert_1 = require(\"@noble/hashes/_assert\");\nconst pbkdf2_1 = require(\"@noble/hashes/pbkdf2\");\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst sha512_1 = require(\"@noble/hashes/sha512\");\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst base_1 = require(\"@scure/base\");\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    _assert_1.default.bytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction generateMnemonic(wordlist, strength = 128) {\n    _assert_1.default.number(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic((0, utils_1.randomBytes)(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([((0, sha256_1.sha256)(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Worlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return base_1.utils.chain(base_1.utils.checksum(1, calcChecksum), base_1.utils.radix2(11, true), base_1.utils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nfunction entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeed(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nfunction mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return (0, pbkdf2_1.pbkdf2)(sha512_1.sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\n","export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n","import assert from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { Hash, CHash, Input, createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n\n// PBKDF (RFC 2898)\nexport type Pbkdf2Opt = {\n  c: number; // Iterations\n  dkLen?: number; // Desired key length in bytes (Intended output length in octets of the derived key\n  asyncTick?: number; // Maximum time in ms for which async function can block execution\n};\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash: CHash, _password: Input, _salt: Input, _opts: Pbkdf2Opt) {\n  assert.hash(hash);\n  const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n  const { c, dkLen, asyncTick } = opts;\n  assert.number(c);\n  assert.number(dkLen);\n  assert.number(asyncTick);\n  if (c < 1) throw new Error('PBKDF2: iterations (c) should be >= 1');\n  const password = toBytes(_password);\n  const salt = toBytes(_salt);\n  // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n  const DK = new Uint8Array(dkLen);\n  // U1 = PRF(Password, Salt + INT_32_BE(i))\n  const PRF = hmac.create(hash, password);\n  const PRFSalt = PRF._cloneInto().update(salt);\n  return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\n\nfunction pbkdf2Output<T extends Hash<T>>(\n  PRF: Hash<T>,\n  PRFSalt: Hash<T>,\n  DK: Uint8Array,\n  prfW: Hash<T>,\n  u: Uint8Array\n) {\n  PRF.destroy();\n  PRFSalt.destroy();\n  if (prfW) prfW.destroy();\n  u.fill(0);\n  return DK;\n}\n\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    for (let ui = 1; ui < c; ui++) {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    }\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n\nexport async function pbkdf2Async(hash: CHash, password: Input, salt: Input, opts: Pbkdf2Opt) {\n  const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n  let prfW: any; // Working copy\n  const arr = new Uint8Array(4);\n  const view = createView(arr);\n  const u = new Uint8Array(PRF.outputLen);\n  // DK = T1 + T2 + ⋯ + Tdklen/hlen\n  for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n    // Ti = F(Password, Salt, c, i)\n    const Ti = DK.subarray(pos, pos + PRF.outputLen);\n    view.setInt32(0, ti, false);\n    // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n    Ti.set(u.subarray(0, Ti.length));\n    await asyncLoop(c - 1, asyncTick, (i) => {\n      // Uc = PRF(Password, Uc−1)\n      PRF._cloneInto(prfW).update(u).digestInto(u);\n      for (let i = 0; i < Ti.length; i++) Ti[i] ^= u[i];\n    });\n  }\n  return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n","import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// The import here is via the package name. This is to ensure\n// that exports mapping/resolution does fall into place.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// There is almost no big endian hardware, but js typed arrays uses platform specific endianness.\n// So, just to be sure not to corrupt anything.\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef]))\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef')\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow. However, call to async function will return Promise\n// which will be fullfiled only on next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  // Cleanup internal state. Not '.clean' because instance is not usable after that.\n  // Clean usually resets instance to initial state, but it is not possible for keyed hashes if key is consumed into state.\n  // NOTE: if digest is not consumed by user, user need manually call '.destroy' if zeroing is required\n  abstract destroy(): void;\n  // Unsafe because doesn't check if \"to\" is correct. Can be used as clone() if no opts passed.\n  // Why cloneInto instead of clone? Mostly performance (same as _digestInto), but also has nice property: it reuses instance\n  // which means all internal buffers is overwritten, which also causes overwrite buffer which used for digest (in some cases).\n  // We don't provide any guarantees about cleanup (it is impossible to!), so should be enough for now.\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto.web) {\n    return crypto.web.getRandomValues(new Uint8Array(bytesLength));\n  } else if (crypto.node) {\n    return new Uint8Array(crypto.node.randomBytes(bytesLength).buffer);\n  } else {\n    throw new Error(\"The environment doesn't have randomBytes function\");\n  }\n}\n","// Global symbol available in browsers only\ndeclare const self: Record<string, any> | undefined;\nexport const crypto: { node?: any; web?: any } = {\n  node: undefined,\n  web: typeof self === 'object' && 'crypto' in self ? self.crypto : undefined,\n};\n","import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n","import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = u64.split([\n  '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n  '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n  '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n  '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n  '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n  '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n  '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n  '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n  '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n  '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n  '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n  '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n  '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n  '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n  '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n  '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n  '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n  '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n  '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n  '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n)));\n\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = new Uint32Array(80);\nconst SHA512_W_L = new Uint32Array(80);\n\nexport class SHA512 extends SHA2<SHA512> {\n  // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n  // Also looks cleaner and easier to verify with spec.\n  // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x6a09e667 | 0;\n  Al = 0xf3bcc908 | 0;\n  Bh = 0xbb67ae85 | 0;\n  Bl = 0x84caa73b | 0;\n  Ch = 0x3c6ef372 | 0;\n  Cl = 0xfe94f82b | 0;\n  Dh = 0xa54ff53a | 0;\n  Dl = 0x5f1d36f1 | 0;\n  Eh = 0x510e527f | 0;\n  El = 0xade682d1 | 0;\n  Fh = 0x9b05688c | 0;\n  Fl = 0x2b3e6c1f | 0;\n  Gh = 0x1f83d9ab | 0;\n  Gl = 0xfb41bd6b | 0;\n  Hh = 0x5be0cd19 | 0;\n  Hl = 0x137e2179 | 0;\n\n  constructor() {\n    super(128, 64, 16, false);\n  }\n  // prettier-ignore\n  protected get(): [\n    number, number, number, number, number, number, number, number,\n    number, number, number, number, number, number, number, number\n  ] {\n    const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n  }\n  // prettier-ignore\n  protected set(\n    Ah: number, Al: number, Bh: number, Bl: number, Ch: number, Cl: number, Dh: number, Dl: number,\n    Eh: number, El: number, Fh: number, Fl: number, Gh: number, Gl: number, Hh: number, Hl: number\n  ) {\n    this.Ah = Ah | 0;\n    this.Al = Al | 0;\n    this.Bh = Bh | 0;\n    this.Bl = Bl | 0;\n    this.Ch = Ch | 0;\n    this.Cl = Cl | 0;\n    this.Dh = Dh | 0;\n    this.Dl = Dl | 0;\n    this.Eh = Eh | 0;\n    this.El = El | 0;\n    this.Fh = Fh | 0;\n    this.Fl = Fl | 0;\n    this.Gh = Gh | 0;\n    this.Gl = Gl | 0;\n    this.Hh = Hh | 0;\n    this.Hl = Hl | 0;\n  }\n  protected process(view: DataView, offset: number) {\n    // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) {\n      SHA512_W_H[i] = view.getUint32(offset);\n      SHA512_W_L[i] = view.getUint32((offset += 4));\n    }\n    for (let i = 16; i < 80; i++) {\n      // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n      const W15h = SHA512_W_H[i - 15] | 0;\n      const W15l = SHA512_W_L[i - 15] | 0;\n      const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n      const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n      // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n      const W2h = SHA512_W_H[i - 2] | 0;\n      const W2l = SHA512_W_L[i - 2] | 0;\n      const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n      const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n      // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n      const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n      const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n      SHA512_W_H[i] = SUMh | 0;\n      SHA512_W_L[i] = SUMl | 0;\n    }\n    let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n    // Compression function main loop, 80 rounds\n    for (let i = 0; i < 80; i++) {\n      // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n      const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n      const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n      //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n      const CHIl = (El & Fl) ^ (~El & Gl);\n      // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n      // prettier-ignore\n      const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n      const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n      const T1l = T1ll | 0;\n      // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n      const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n      const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n      const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n      const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n      Hh = Gh | 0;\n      Hl = Gl | 0;\n      Gh = Fh | 0;\n      Gl = Fl | 0;\n      Fh = Eh | 0;\n      Fl = El | 0;\n      ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n      Dh = Ch | 0;\n      Dl = Cl | 0;\n      Ch = Bh | 0;\n      Cl = Bl | 0;\n      Bh = Ah | 0;\n      Bl = Al | 0;\n      const All = u64.add3L(T1l, sigma0l, MAJl);\n      Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n      Al = All | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n    ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n    ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n    ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n    ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n    ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n    ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n    ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n    this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n  }\n  protected roundClean() {\n    SHA512_W_H.fill(0);\n    SHA512_W_L.fill(0);\n  }\n  destroy() {\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n  }\n}\n\nclass SHA512_224 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x8c3d37c8 | 0;\n  Al = 0x19544da2 | 0;\n  Bh = 0x73e19966 | 0;\n  Bl = 0x89dcd4d6 | 0;\n  Ch = 0x1dfab7ae | 0;\n  Cl = 0x32ff9c82 | 0;\n  Dh = 0x679dd514 | 0;\n  Dl = 0x582f9fcf | 0;\n  Eh = 0x0f6d2b69 | 0;\n  El = 0x7bd44da8 | 0;\n  Fh = 0x77e36f73 | 0;\n  Fl = 0x04c48942 | 0;\n  Gh = 0x3f9d85a8 | 0;\n  Gl = 0x6a1d36c8 | 0;\n  Hh = 0x1112e6ad | 0;\n  Hl = 0x91d692a1 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\nclass SHA512_256 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0x22312194 | 0;\n  Al = 0xfc2bf72c | 0;\n  Bh = 0x9f555fa3 | 0;\n  Bl = 0xc84c64c2 | 0;\n  Ch = 0x2393b86b | 0;\n  Cl = 0x6f53b151 | 0;\n  Dh = 0x96387719 | 0;\n  Dl = 0x5940eabd | 0;\n  Eh = 0x96283ee2 | 0;\n  El = 0xa88effe3 | 0;\n  Fh = 0xbe5e1e25 | 0;\n  Fl = 0x53863992 | 0;\n  Gh = 0x2b0199fc | 0;\n  Gl = 0x2c85b8aa | 0;\n  Hh = 0x0eb72ddc | 0;\n  Hl = 0x81c52ca2 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 32;\n  }\n}\n\nclass SHA384 extends SHA512 {\n  // h -- high 32 bits, l -- low 32 bits\n  Ah = 0xcbbb9d5d | 0;\n  Al = 0xc1059ed8 | 0;\n  Bh = 0x629a292a | 0;\n  Bl = 0x367cd507 | 0;\n  Ch = 0x9159015a | 0;\n  Cl = 0x3070dd17 | 0;\n  Dh = 0x152fecd8 | 0;\n  Dl = 0xf70e5939 | 0;\n  Eh = 0x67332667 | 0;\n  El = 0xffc00b31 | 0;\n  Fh = 0x8eb44a87 | 0;\n  Fl = 0x68581511 | 0;\n  Gh = 0xdb0c2e0d | 0;\n  Gl = 0x64f98fa7 | 0;\n  Hh = 0x47b5481d | 0;\n  Hl = 0xbefa4fa4 | 0;\n\n  constructor() {\n    super();\n    this.outputLen = 48;\n  }\n}\n\nexport const sha512 = wrapConstructor(() => new SHA512());\nexport const sha512_224 = wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = wrapConstructor(() => new SHA512_256());\nexport const sha384 = wrapConstructor(() => new SHA384());\n","const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n","/*! scure-bip32 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { bytes as assertBytes } from '@noble/hashes/_assert';\nimport { bytesToHex, concatBytes, createView, hexToBytes, utf8ToBytes } from '@noble/hashes/utils';\nimport * as secp from '@noble/secp256k1';\nimport { base58check as base58checker } from '@scure/base';\n\n// Enable sync API for noble-secp256k1\nsecp.utils.hmacSha256Sync = (key, ...msgs) => hmac(sha256, key, secp.utils.concatBytes(...msgs));\nconst base58check = base58checker(sha256);\n\nfunction bytesToNumber(bytes: Uint8Array): bigint {\n  return BigInt(`0x${bytesToHex(bytes)}`);\n}\n\nfunction numberToBytes(num: bigint): Uint8Array {\n  return hexToBytes(num.toString(16).padStart(64, '0'));\n}\n\nconst MASTER_SECRET = utf8ToBytes('Bitcoin seed');\n// Bitcoin hardcoded by default\nconst BITCOIN_VERSIONS: Versions = { private: 0x0488ade4, public: 0x0488b21e };\nexport const HARDENED_OFFSET: number = 0x80000000;\n\nexport interface Versions {\n  private: number;\n  public: number;\n}\n\nconst hash160 = (data: Uint8Array) => ripemd160(sha256(data));\nconst fromU32 = (data: Uint8Array) => createView(data).getUint32(0, false);\nconst toU32 = (n: number) => {\n  if (!Number.isSafeInteger(n) || n < 0 || n > 2 ** 32 - 1) {\n    throw new Error(`Invalid number=${n}. Should be from 0 to 2 ** 32 - 1`);\n  }\n  const buf = new Uint8Array(4);\n  createView(buf).setUint32(0, n, false);\n  return buf;\n};\n\ninterface HDKeyOpt {\n  versions: Versions;\n  depth?: number;\n  index?: number;\n  parentFingerprint?: number;\n  chainCode: Uint8Array;\n  publicKey?: Uint8Array;\n  privateKey?: Uint8Array | bigint;\n}\n\nexport class HDKey {\n  get fingerprint(): number {\n    if (!this.pubHash) {\n      throw new Error('No publicKey set!');\n    }\n    return fromU32(this.pubHash);\n  }\n  get identifier(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get pubKeyHash(): Uint8Array | undefined {\n    return this.pubHash;\n  }\n  get privateKey(): Uint8Array | null {\n    return this.privKeyBytes || null;\n  }\n  get publicKey(): Uint8Array | null {\n    return this.pubKey || null;\n  }\n  get privateExtendedKey(): string {\n    const priv = this.privateKey;\n    if (!priv) {\n      throw new Error('No private key');\n    }\n    return base58check.encode(\n      this.serialize(this.versions.private, concatBytes(new Uint8Array([0]), priv))\n    );\n  }\n  get publicExtendedKey(): string {\n    if (!this.pubKey) {\n      throw new Error('No public key');\n    }\n    return base58check.encode(this.serialize(this.versions.public, this.pubKey));\n  }\n\n  public static fromMasterSeed(seed: Uint8Array, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    assertBytes(seed);\n    if (8 * seed.length < 128 || 8 * seed.length > 512) {\n      throw new Error(\n        `HDKey: wrong seed length=${seed.length}. Should be between 128 and 512 bits; 256 bits is advised)`\n      );\n    }\n    const I = hmac(sha512, MASTER_SECRET, seed);\n    return new HDKey({\n      versions,\n      chainCode: I.slice(32),\n      privateKey: I.slice(0, 32),\n    });\n  }\n\n  public static fromExtendedKey(base58key: string, versions: Versions = BITCOIN_VERSIONS): HDKey {\n    // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    const keyBuffer: Uint8Array = base58check.decode(base58key);\n    const keyView = createView(keyBuffer);\n    const version = keyView.getUint32(0, false);\n    const opt = {\n      versions,\n      depth: keyBuffer[4],\n      parentFingerprint: keyView.getUint32(5, false),\n      index: keyView.getUint32(9, false),\n      chainCode: keyBuffer.slice(13, 45),\n    };\n    const key = keyBuffer.slice(45);\n    const isPriv = key[0] === 0;\n    if (version !== versions[isPriv ? 'private' : 'public']) {\n      throw new Error('Version mismatch');\n    }\n    if (isPriv) {\n      return new HDKey({ ...opt, privateKey: key.slice(1) });\n    } else {\n      return new HDKey({ ...opt, publicKey: key });\n    }\n  }\n\n  public static fromJSON(json: { xpriv: string }): HDKey {\n    return HDKey.fromExtendedKey(json.xpriv);\n  }\n  public readonly versions: Versions;\n  public readonly depth: number = 0;\n  public readonly index: number = 0;\n  public readonly chainCode: Uint8Array | null = null;\n  public readonly parentFingerprint: number = 0;\n  private privKey?: bigint;\n  private privKeyBytes?: Uint8Array;\n  private pubKey?: Uint8Array;\n  private pubHash: Uint8Array | undefined;\n\n  constructor(opt: HDKeyOpt) {\n    if (!opt || typeof opt !== 'object') {\n      throw new Error('HDKey.constructor must not be called directly');\n    }\n    this.versions = opt.versions || BITCOIN_VERSIONS;\n    this.depth = opt.depth || 0;\n    this.chainCode = opt.chainCode;\n    this.index = opt.index || 0;\n    this.parentFingerprint = opt.parentFingerprint || 0;\n    if (!this.depth) {\n      if (this.parentFingerprint || this.index) {\n        throw new Error('HDKey: zero depth with non-zero index/parent fingerprint');\n      }\n    }\n    if (opt.publicKey && opt.privateKey) {\n      throw new Error('HDKey: publicKey and privateKey at same time.');\n    }\n    if (opt.privateKey) {\n      if (!secp.utils.isValidPrivateKey(opt.privateKey)) {\n        throw new Error('Invalid private key');\n      }\n      this.privKey =\n        typeof opt.privateKey === 'bigint' ? opt.privateKey : bytesToNumber(opt.privateKey);\n      this.privKeyBytes = numberToBytes(this.privKey);\n      this.pubKey = secp.getPublicKey(opt.privateKey, true);\n    } else if (opt.publicKey) {\n      this.pubKey = secp.Point.fromHex(opt.publicKey).toRawBytes(true); // force compressed point\n    } else {\n      throw new Error('HDKey: no public or private key provided');\n    }\n    this.pubHash = hash160(this.pubKey);\n  }\n\n  public derive(path: string): HDKey {\n    if (!/^[mM]'?/.test(path)) {\n      throw new Error('Path must start with \"m\" or \"M\"');\n    }\n    if (/^[mM]'?$/.test(path)) {\n      return this;\n    }\n    const parts = path.replace(/^[mM]'?\\//, '').split('/');\n    // tslint:disable-next-line\n    let child: HDKey = this;\n    for (const c of parts) {\n      const m = /^(\\d+)('?)$/.exec(c);\n      if (!m || m.length !== 3) {\n        throw new Error(`Invalid child index: ${c}`);\n      }\n      let idx = +m[1];\n      if (!Number.isSafeInteger(idx) || idx >= HARDENED_OFFSET) {\n        throw new Error('Invalid index');\n      }\n      // hardened key\n      if (m[2] === \"'\") {\n        idx += HARDENED_OFFSET;\n      }\n      child = child.deriveChild(idx);\n    }\n    return child;\n  }\n\n  public deriveChild(index: number): HDKey {\n    if (!this.pubKey || !this.chainCode) {\n      throw new Error('No publicKey or chainCode set');\n    }\n    let data = toU32(index);\n    if (index >= HARDENED_OFFSET) {\n      // Hardened\n      const priv = this.privateKey;\n      if (!priv) {\n        throw new Error('Could not derive hardened child key');\n      }\n      // Hardened child: 0x00 || ser256(kpar) || ser32(index)\n      data = concatBytes(new Uint8Array([0]), priv, data);\n    } else {\n      // Normal child: serP(point(kpar)) || ser32(index)\n      data = concatBytes(this.pubKey, data);\n    }\n    const I = hmac(sha512, this.chainCode, data);\n    const childTweak = bytesToNumber(I.slice(0, 32));\n    const chainCode = I.slice(32);\n    if (!secp.utils.isValidPrivateKey(childTweak)) {\n      throw new Error('Tweak bigger than curve order');\n    }\n    const opt: HDKeyOpt = {\n      versions: this.versions,\n      chainCode,\n      depth: this.depth + 1,\n      parentFingerprint: this.fingerprint,\n      index,\n    };\n    try {\n      // Private parent key -> private child key\n      if (this.privateKey) {\n        const added = secp.utils.mod(this.privKey! + childTweak, secp.CURVE.n);\n        if (!secp.utils.isValidPrivateKey(added)) {\n          throw new Error('The tweak was out of range or the resulted private key is invalid');\n        }\n        opt.privateKey = added;\n      } else {\n        const added = secp.Point.fromHex(this.pubKey).add(secp.Point.fromPrivateKey(childTweak));\n        // Cryptographically impossible: hmac-sha512 preimage would need to be found\n        if (added.equals(secp.Point.ZERO)) {\n          throw new Error('The tweak was equal to negative P, which made the result key invalid');\n        }\n        opt.publicKey = added.toRawBytes(true);\n      }\n      return new HDKey(opt);\n    } catch (err) {\n      return this.deriveChild(index + 1);\n    }\n  }\n\n  public sign(hash: Uint8Array): Uint8Array {\n    if (!this.privateKey) {\n      throw new Error('No privateKey set!');\n    }\n    assertBytes(hash, 32);\n    return secp.signSync(hash, this.privKey!, {\n      canonical: true,\n      der: false,\n    });\n  }\n\n  public verify(hash: Uint8Array, signature: Uint8Array): boolean {\n    assertBytes(hash, 32);\n    assertBytes(signature, 64);\n    if (!this.publicKey) {\n      throw new Error('No publicKey set!');\n    }\n    let sig;\n    try {\n      sig = secp.Signature.fromCompact(signature);\n    } catch (error) {\n      return false;\n    }\n    return secp.verify(sig, hash, this.publicKey);\n  }\n\n  public wipePrivateData(): this {\n    this.privKey = undefined;\n    if (this.privKeyBytes) {\n      this.privKeyBytes.fill(0);\n      this.privKeyBytes = undefined;\n    }\n    return this;\n  }\n  public toJSON(): { xpriv: string; xpub: string } {\n    return {\n      xpriv: this.privateExtendedKey,\n      xpub: this.publicExtendedKey,\n    };\n  }\n\n  private serialize(version: number, key: Uint8Array) {\n    if (!this.chainCode) {\n      throw new Error('No chainCode set');\n    }\n    assertBytes(key, 33);\n    // version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n    return concatBytes(\n      toU32(version),\n      new Uint8Array([this.depth]),\n      toU32(this.parentFingerprint),\n      toU32(this.index),\n      this.chainCode,\n      key\n    );\n  }\n}\n","import { SHA2 } from './_sha2.js';\nimport { wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = Uint8Array.from({ length: 16 }, (_, i) => i);\nconst Pi = Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\n\nconst shiftsL = idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\n\nconst Kl = new Uint32Array([0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]);\nconst Kr = new Uint32Array([0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]);\n// The rotate left (circular left shift) operation for uint32\nconst rotl = (word: number, shift: number) => (word << shift) | (word >>> (32 - shift));\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst BUF = new Uint32Array(16);\nexport class RIPEMD160 extends SHA2<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = wrapConstructor(() => new RIPEMD160());\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hmac = void 0;\nconst utils_js_1 = require(\"./utils.js\");\n// HMAC (RFC 2104)\nclass HMAC extends utils_js_1.Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        (0, utils_js_1.assertHash)(hash);\n        const key = (0, utils_js_1.toBytes)(_key);\n        this.iHash = hash.create();\n        if (!(this.iHash instanceof utils_js_1.Hash))\n            throw new TypeError('Expected instance of class which extends utils.Hash');\n        const blockLen = (this.blockLen = this.iHash.blockLen);\n        this.outputLen = this.iHash.outputLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > this.iHash.blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        if (this.destroyed)\n            throw new Error('instance is destroyed');\n        if (!(out instanceof Uint8Array) || out.length !== this.outputLen)\n            throw new Error('HMAC: Invalid output buffer');\n        if (this.finished)\n            throw new Error('digest() was already called');\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\nconst hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nexports.hmac = hmac;\nexports.hmac.create = (hash, key) => new HMAC(hash, key);\nexports.hmac.init = exports.hmac.create;\n","export const PRIVATE_KEY_STORAGE_KEY = \"__nostrPrivateKey\" as const;\nexport const RELAYS_STORAGE_KEY = \"__nostrRelays\" as const;\nexport const PLUS_CODE_TAG_KEY = \"l\" as const;\nexport const MAP_NOTE_KIND = 397 as const;\nexport const DEFAULT_RELAYS = [\n  \"wss://nostr.massmux.com\",\n  \"wss://public.nostr.swissrouting.com\",\n  \"wss://nostr.slothy.win\",\n];\n","import {\n  generatePrivateKey,\n  getPublicKey as getPublicKeyFromPrivateKey,\n  nip19,\n} from \"nostr-tools\";\nimport { PRIVATE_KEY_STORAGE_KEY } from \"../constants\";\nimport { MaybeLocalStorage } from \"../types\";\n\nexport const getPrivateKey = async ({\n  localStorage = globalThis.localStorage,\n}: MaybeLocalStorage = {}) => {\n  const privateKeyMaybe = localStorage.getItem(PRIVATE_KEY_STORAGE_KEY);\n  if (privateKeyMaybe === null || privateKeyMaybe.length !== 64) {\n    throw new Error(\"#lvYBhM Cannot find private key\");\n  }\n  return privateKeyMaybe;\n};\n\nexport const getNsecPrivateKey = async ({\n  localStorage = globalThis.localStorage,\n}: MaybeLocalStorage = {}): Promise<string> => {\n  const privateKey = await getPrivateKey();\n  const nsecPrivateKey = nip19.nsecEncode(privateKey);\n  return nsecPrivateKey;\n};\n\nexport const hasPrivateKey = async ({\n  localStorage = globalThis.localStorage,\n}: MaybeLocalStorage = {}) => {\n  try {\n    await getPrivateKey();\n    return true;\n  } catch {}\n  return false;\n};\n\nexport const getPublicKey = async ({\n  localStorage = globalThis.localStorage,\n}: MaybeLocalStorage = {}): Promise<string> => {\n  const privateKey = await getPrivateKey({ localStorage });\n\n  const publicKey = getPublicKeyFromPrivateKey(privateKey);\n\n  return publicKey;\n};\n\nexport const getNpubPublicKey = async ({\n  localStorage = globalThis.localStorage,\n}: MaybeLocalStorage = {}): Promise<string> => {\n  const publicKey = await getPublicKey();\n  const npubPublicKey = nip19.npubEncode(publicKey);\n  return npubPublicKey;\n};\n\ntype SetPrivateKeyParams = {\n  /** The private key to store */\n  privateKey: string;\n};\nexport const setPrivateKey = async ({\n  privateKey,\n  localStorage = globalThis.localStorage,\n}: SetPrivateKeyParams & MaybeLocalStorage) => {\n  if (privateKey.length !== 64) {\n    throw new Error(\"#irpzXh Private key is not 64 characters\");\n  }\n  localStorage.setItem(PRIVATE_KEY_STORAGE_KEY, privateKey);\n};\n\nexport const createPrivateKey = async () => {\n  const privateKey = generatePrivateKey();\n  await setPrivateKey({ privateKey });\n  return privateKey;\n};\n","import { Event } from \"nostr-tools\";\nimport { MAP_NOTE_KIND, PLUS_CODE_TAG_KEY } from \"../constants\";\nimport { UnsignedEvent } from \"../types\";\nimport { getPrivateKey } from \"./keys\";\nimport { _publish } from \"./relays\";\nimport { signEventWithPrivateKey } from \"./utils\";\n\ntype CreateNoteParams = {\n  /** The content of the note to publish on the map */\n  content: string;\n  /** The plus code (location) of the note */\n  plusCode: string;\n  privateKey?: string;\n};\nexport const createNote = async ({\n  content,\n  plusCode,\n  privateKey,\n}: CreateNoteParams) => {\n  const key =\n    typeof privateKey === \"undefined\" ? await getPrivateKey() : privateKey;\n  const unsignedEvent: UnsignedEvent = {\n    kind: MAP_NOTE_KIND,\n    content,\n    tags: [[PLUS_CODE_TAG_KEY, plusCode]],\n  };\n  const signedEvent = signEventWithPrivateKey({\n    unsignedEvent,\n    privateKey: key,\n  });\n  _publish(signedEvent);\n  // TODO - How do we wait for the SEEN here?\n};\n\nglobalThis.createNote = createNote;\n","import {\n  getEventHash,\n  getPublicKey as getPublicKeyFromPrivateKey,\n  Kind,\n  nip19,\n  nip26,\n  signEvent,\n} from \"nostr-tools\";\nimport { NostrEvent, Profile, UnsignedEvent } from \"../types\";\n\nexport const dateToUnix = (_date?: Date) => {\n  const date = _date || new Date();\n\n  return Math.floor(date.getTime() / 1000);\n};\n\nexport const getPublicKeyFromEvent = ({ event }: { event: NostrEvent }) => {\n  const maybeDelegator = nip26.getDelegator(event);\n  return maybeDelegator || event.pubkey;\n};\n\nexport const getProfileFromEvent = ({\n  event,\n}: {\n  event: NostrEvent;\n}): Profile => {\n  if (event.kind !== Kind.Metadata) {\n    throw new Error(\"#pC5T6P Trying to get profile from non metadata event\");\n  }\n\n  const profileJson = event.content;\n  const publicKey = getPublicKeyFromEvent({ event });\n  const npubPublicKey = nip19.npubEncode(publicKey);\n  try {\n    const profile = JSON.parse(profileJson) as Omit<\n      Profile,\n      \"publicKey\" | \"npubPublicKey\"\n    >;\n    return { ...profile, publicKey, npubPublicKey };\n  } catch (e) {\n    const message = \"#j2o1vH Failed to get profile from event\";\n    console.error(message, e);\n    throw new Error(message);\n  }\n};\n\nexport const filterForTag = (key: string) => (tags: string[]) =>\n  tags[0] === key;\n\ntype GetTagFirstValueFromEventParams = {\n  /** The event to extract the tag value from */\n  event: NostrEvent;\n  /** The name (key) of the tag to get the value of */\n  tag: string;\n};\n/**\n * @returns - The string value of the tag, or undefined if the tag does not exist\n */\nexport const getTagFirstValueFromEvent = ({\n  event,\n  tag,\n}: GetTagFirstValueFromEventParams) => {\n  const tagArray = event.tags.find(filterForTag(tag));\n  if (typeof tagArray === \"undefined\") {\n    return;\n  }\n  // The value is the second element in the array\n  return tagArray[1];\n};\n\ntype GetTagValuesFromEventParams = {\n  /** The event to extract the tag value from */\n  event: NostrEvent;\n  /** The name (key) of the tag to get the values of */\n  tag: string;\n};\n/**\n * @returns - An array of the string values for this tag\n */\nexport const getTagValuesFromEvent = ({\n  event,\n  tag,\n}: GetTagValuesFromEventParams): string[] => {\n  const tagArrays = event.tags.filter(filterForTag(tag));\n  const tagValues = tagArrays.map((tag) => tag[1]);\n  return tagValues;\n};\n\nexport const signEventWithPrivateKey = ({\n  unsignedEvent,\n  privateKey,\n}: {\n  unsignedEvent: UnsignedEvent;\n  privateKey: string;\n}) => {\n  const pubkey = getPublicKeyFromPrivateKey(privateKey);\n  const base = {\n    ...unsignedEvent,\n    created_at: dateToUnix(),\n    pubkey,\n  };\n  const id = getEventHash(base);\n  const toSign = { ...base, id };\n  const sig = signEvent(toSign, privateKey);\n  const signed = { ...toSign, sig };\n  return signed;\n};\n\nexport const uniq = <T>(input: T[]): T[] => {\n  return input.filter((val, index, input) => index === input.indexOf(val));\n};\n","import { Kind, nip19 } from \"nostr-tools\";\nimport { MaybeLocalStorage, Profile, UnsignedEvent } from \"../types\";\nimport { getPrivateKey } from \"./keys\";\nimport { _publish, _subscribe } from \"./relays\";\nimport { getProfileFromEvent, signEventWithPrivateKey } from \"./utils\";\n\ntype SetProfileParams = {\n  /** The user's name to be sent to all relays */\n  name: string;\n  /** A longer string that may (later) be shown on the user's profile page */\n  about: string;\n  /** The private key of the user, optionally fetched from localStorage */\n  privateKey?: string;\n} & MaybeLocalStorage;\nexport const setProfile = async ({\n  name,\n  about,\n  privateKey,\n  localStorage,\n}: SetProfileParams) => {\n  const key =\n    typeof privateKey !== \"undefined\"\n      ? privateKey\n      : await getPrivateKey({ localStorage });\n  const content = JSON.stringify({ name, about });\n  const unsignedEvent: UnsignedEvent = {\n    kind: Kind.Metadata,\n    content,\n    tags: [],\n  };\n  const signedEvent = signEventWithPrivateKey({\n    unsignedEvent,\n    privateKey: key,\n  });\n  try {\n    const publishPromises = _publish(signedEvent);\n    await Promise.all(publishPromises);\n  } catch (error) {\n    const message = \"#mkox3R Error saving profile\";\n    console.error(message, error);\n    throw error;\n  }\n};\n\ntype GetProfileParams = {\n  /** The public key of the user to fetch their profile */\n  publicKey: string;\n};\nexport const subscribeAndGetProfile = async ({\n  publicKey,\n}: GetProfileParams) => {\n  return new Promise<Profile>((resolve, reject) => {\n    const npubPublicKey = nip19.npubEncode(publicKey);\n    const subscriptions = _subscribe({\n      filters: [\n        {\n          kinds: [Kind.Metadata],\n          authors: [publicKey],\n        },\n      ],\n      onEvent: (event) => {\n        try {\n          const profile = getProfileFromEvent({ event });\n          // NOTE: This will be called multiple times, but any calls after the\n          // first are ignored\n          resolve(profile);\n        } catch (error) {\n          console.error(\"#P0haKt Failed to get profile from event\", error);\n        }\n      },\n    });\n\n    // Timeout after 2s. This is a no-op if the promise already resolved above.\n    setTimeout(() => {\n      resolve({ publicKey, npubPublicKey, name: \"\", about: \"\", picture: \"\" });\n    }, 2e3);\n  });\n};\n","import { Kind, Filter, nip19 } from \"nostr-tools\";\nimport { MAP_NOTE_KIND, PLUS_CODE_TAG_KEY } from \"../constants\";\nimport { NostrEvent, Note, Profile } from \"../types\";\nimport { _subscribe } from \"./relays\";\nimport {\n  getProfileFromEvent,\n  getPublicKeyFromEvent,\n  getTagFirstValueFromEvent,\n  uniq,\n} from \"./utils\";\n\nconst eventToNoteMinusProfile = ({\n  event,\n}: {\n  event: NostrEvent;\n}): Omit<Note, \"authorName\"> => {\n  // NOTE: We need to cast `note.kind` here because the `NostrEvent` type has a\n  // enum for Kinds, which doesn't include our custom kind.\n  if ((event.kind as number) !== MAP_NOTE_KIND) {\n    throw new Error(\"#w27ijD Cannot convert event of wrong kind to note\");\n  }\n\n  const plusCode = getTagFirstValueFromEvent({ event, tag: PLUS_CODE_TAG_KEY });\n  if (typeof plusCode === \"undefined\") {\n    throw new Error(\"#C7a4Ck Cannot convert invalid event to note\");\n  }\n\n  const publicKey = getPublicKeyFromEvent({ event });\n  const authorNpubPublicKey = nip19.npubEncode(publicKey);\n\n  const { content } = event;\n\n  return {\n    authorPublicKey: publicKey,\n    authorNpubPublicKey,\n    content,\n    plusCode,\n  };\n};\n\nconst eventToNote = ({\n  event,\n  profiles,\n}: {\n  event: NostrEvent;\n  profiles: { [publicKey: string]: Profile };\n}): Note => {\n  const baseNote = eventToNoteMinusProfile({ event });\n  const profile = profiles[baseNote.authorPublicKey];\n  const authorName = profile?.name || \"\";\n  return { ...baseNote, authorName };\n};\n\ntype SubscribeParams = {\n  /** The public key of the user to fetch events for, or undefined to fetch events from all users */\n  publicKey?: string;\n  /** The maximum number of notes to fetch\n   * @default 200\n   */\n  limit?: number;\n  onNoteReceived: (note: Note) => void;\n};\nexport const subscribe = async ({\n  publicKey,\n  onNoteReceived,\n  limit = 200,\n}: SubscribeParams) => {\n  console.log(\"#qnvvsm nostr/subscribe\", publicKey);\n  let gotNotesEose = false;\n  const profiles: { [publicKey: string]: Profile } = {};\n\n  const getEventsForSpecificAuthor = typeof publicKey !== \"undefined\";\n\n  const eventsBaseFilter = { kinds: [MAP_NOTE_KIND] };\n\n  const eventsFilter: Filter = getEventsForSpecificAuthor\n    ? { ...eventsBaseFilter, authors: [publicKey] }\n    : eventsBaseFilter;\n  const eventsFilterWithLimit = { ...eventsFilter, limit };\n\n  const noteEvents: NostrEvent[] = [];\n\n  const onNoteEvent = (event: NostrEvent) => {\n    if (!gotNotesEose) {\n      noteEvents.push(event);\n      return;\n    }\n\n    const note = eventToNote({ event, profiles });\n    onNoteReceived(note);\n  };\n\n  const noteSubscriptions = _subscribe({\n    filters: [eventsFilterWithLimit],\n    onEvent: onNoteEvent,\n  });\n  await Promise.race(noteSubscriptions);\n  gotNotesEose = true;\n\n  const authorsWithDuplicates = noteEvents.map((event) =>\n    getPublicKeyFromEvent({ event })\n  );\n  const authors = uniq(authorsWithDuplicates);\n  const profileFilter: Filter = {\n    kinds: [Kind.Metadata],\n    authors,\n  };\n\n  const profileEvents: NostrEvent[] = [];\n  const onProfileEvent = (event: NostrEvent) => {\n    const profile = getProfileFromEvent({ event });\n    const publicKey = getPublicKeyFromEvent({ event });\n    profiles[publicKey] = profile;\n  };\n\n  const profileSubscriptions = _subscribe({\n    filters: [profileFilter],\n    onEvent: onProfileEvent,\n  });\n  await Promise.race(profileSubscriptions);\n\n  // NOTE: At this point we should have fetched all the stored events, and all\n  // the profiles of the authors of all of those events\n  const notes = noteEvents.map((event) => eventToNote({ event, profiles }));\n\n  notes.forEach((note) => onNoteReceived(note));\n};\n"],"names":["$jktzu","parcelRequire","createRelays","$mdmCO","$ab5b3bf822687818$var$relays","globalThis","relays","$ab5b3bf822687818$export$37be945df5c81949","async","localStorage","relaysJSONMaybe","getItem","$bNqR0","RELAYS_STORAGE_KEY","length","Error","JSON","parse","Array","isArray","error","console","$ab5b3bf822687818$export$aed851c492d993af","relaysString","stringify","setItem","$ab5b3bf822687818$export$fe4023c6236a5de0","urls","connectionPromises","map","url","relay","relayInit","connect","push","Promise","all","alert","$ab5b3bf822687818$export$58acfb9469a73bc4","event","resolve","reject","pub","publish","on","reason","$ab5b3bf822687818$export$55b5a1e7e22053","filters","onEvent","subscription","sub","$ab5b3bf822687818$export$d6e12d471d611c6d","relaysJson","$ab5b3bf822687818$export$1794dce39e926d3f","DEFAULT_RELAYS","$7Rh2L","$042c6bfc115f2f71$var$__defProp","Object","defineProperty","$042c6bfc115f2f71$var$__export","target","name","get","enumerable","$042c6bfc115f2f71$export$38f4f9e52b1651a4","utils","bytesToHex","randomPrivateKey","$042c6bfc115f2f71$export$889def73691f9837","privateKey","schnorr","getPublicKey","insertEventIntoAscendingList","$042c6bfc115f2f71$var$insertEventIntoAscendingList","insertEventIntoDescendingList","$042c6bfc115f2f71$var$insertEventIntoDescendingList","utf8Decoder","$042c6bfc115f2f71$var$utf8Decoder","utf8Encoder","$042c6bfc115f2f71$var$utf8Encoder","TextDecoder","TextEncoder","sortedArray","midPoint","start","end","position","created_at","Math","floor","id","slice","$042c6bfc115f2f71$export$a84bdc57c5122798","Kind2","$042c6bfc115f2f71$export$11a838ad4e557e0e","eventHash","$kOu3n","sha256","encode","evt","$042c6bfc115f2f71$export$d08d852dd562b1ce","pubkey","kind","tags","content","$042c6bfc115f2f71$export$d32d86987f616a9e","match","i","tag","j","$042c6bfc115f2f71$export$33109f23e301ddf","key","signSync","$042c6bfc115f2f71$export$c6f8482e724e56c5","filter","ids","indexOf","kinds","authors","f","values","find","t","v","since","until","$042c6bfc115f2f71$var$getHex64","json","field","len","idx","s","$042c6bfc115f2f71$var$getInt","sliced","min","parseInt","$042c6bfc115f2f71$var$matchEventId","$042c6bfc115f2f71$var$matchEventPubkey","$042c6bfc115f2f71$var$matchEventKind","$042c6bfc115f2f71$export$fe80edcb51def1e5","alreadyHaveEvent","ws","resolveClose","setOpen","untilOpen","openSubs","listeners","disconnect","notice","subListeners","pubListeners","connectRelay","WebSocket","onopen","forEach","cb","onerror","onclose","handleNextInterval","incomingMessageQueue","handleNext","clearInterval","shift","data","skipVerification","verifySync","sig","$042c6bfc115f2f71$export$ab54e47fdf2903bb","$042c6bfc115f2f71$export$4bbf3f173cb9a4eb","id2","eose","ok","failed","err","onmessage","e","setInterval","trySend","params","msg","send","log","random","toString","subid","newFilters","newOpts","unsub","type","off","listeners2","splice","readyState","index","sent","mustMonitor","then","startMonitoring","catch","monitor","willUnsub","setTimeout","clearTimeout","seen","close","status","getHex64","getInt","matchEventId","matchEventKind","matchEventPubkey","$042c6bfc115f2f71$var$encrypt","privkey","text","normalizedKey","$042c6bfc115f2f71$var$getNormalizedX","getSharedSecret","iv","Uint8Array","from","$ErMMd","randomBytes","plaintext","cryptoKey","crypto","subtle","importKey","ciphertext","encrypt","$4Dsex","base64","buffer","$042c6bfc115f2f71$var$decrypt","ctb64","ivb64","split","decode","decrypt","$042c6bfc115f2f71$var$_fetch","queryProfile","$042c6bfc115f2f71$var$queryProfile","searchDomain","$042c6bfc115f2f71$var$searchDomain","useFetchImplementation","$042c6bfc115f2f71$var$useFetchImplementation","fetch","fetchImplementation","domain","query","names","_","fullname","res","$042c6bfc115f2f71$var$privateKeyFromSeedWords","mnemonic","passphrase","$gDoQG","HDKey","fromMasterSeed","$bhzG2","mnemonicToSeedSync","derive","$042c6bfc115f2f71$var$generateSeedWords","generateMnemonic","$i3leO","wordlist","$042c6bfc115f2f71$var$validateWords","words","validateMnemonic","generateSeedWords","privateKeyFromSeedWords","validateWords","$042c6bfc115f2f71$export$10660ae21dbef115","$042c6bfc115f2f71$var$decode","neventEncode","$042c6bfc115f2f71$var$neventEncode","noteEncode","$042c6bfc115f2f71$var$noteEncode","nprofileEncode","$042c6bfc115f2f71$var$nprofileEncode","npubEncode","$042c6bfc115f2f71$var$npubEncode","nsecEncode","$042c6bfc115f2f71$var$nsecEncode","$042c6bfc115f2f71$var$Bech32MaxSize","nip19","prefix","bech32","fromWords","tlv","$042c6bfc115f2f71$var$parseTLV","d","result","rest","l","hex","$042c6bfc115f2f71$var$encodeBytes","hexToBytes","toWords","profile","$042c6bfc115f2f71$var$encodeTLV","entries","vs","entry","set","concatBytes","$042c6bfc115f2f71$export$5da776b11bffbdae","$042c6bfc115f2f71$var$createDelegation","parameters","conditions","cond","join","sighash","to","$042c6bfc115f2f71$var$getDelegator","tag2","operator","value","createDelegation","getDelegator","hmacSha256Sync","msgs","$7qQcT","hmac","sha256Sync","$kjyEk","$5b8ab42334210395$var$_0n","BigInt","$5b8ab42334210395$var$_1n","$5b8ab42334210395$var$_2n","$5b8ab42334210395$var$_3n","$5b8ab42334210395$var$_8n","$5b8ab42334210395$export$8ff8607b70325343","freeze","a","b","P","n","h","Gx","Gy","beta","$5b8ab42334210395$var$divNearest","$5b8ab42334210395$var$endo","splitScalar","k","a1","b1","a2","b2","POW_2_128","c1","c2","k1","$5b8ab42334210395$var$mod","k2","k1neg","k2neg","$5b8ab42334210395$var$fieldLen","$5b8ab42334210395$var$groupLen","$5b8ab42334210395$var$weierstrass","x","x2","x3","$5b8ab42334210395$var$USE_ENDOMORPHISM","$5b8ab42334210395$var$ShaError","constructor","message","super","$5b8ab42334210395$var$assertJacPoint","other","$5b8ab42334210395$var$JacobianPoint","TypeError","y","z","this","static","p","$5b8ab42334210395$export$baf26146a414f24a","equals","ZERO","points","toInv","nums","scratch","inverted","$5b8ab42334210395$var$invert","reduce","acc","num","reduceRight","$5b8ab42334210395$var$invertBatch","toAffine","toAffineBatch","fromAffine","X1","Y1","Z1","X2","Y2","Z2","Z1Z1","Z2Z2","U1","U2","S1","S2","negate","double","A","B","C","x1b","D","E","F","X3","Y3","Z3","add","H","r","HH","HHH","V","subtract","multiplyUnsafe","scalar","P0","$5b8ab42334210395$var$normalizeScalar","k1p","k2p","precomputeWindow","W","windows","base","window","wNAF","affinePoint","BASE","_WINDOW_SIZE","precomputes","$5b8ab42334210395$var$pointPrecomputes","normalizeZ","windowSize","mask","maxNumber","shiftBy","offset","wbits","Number","offset1","offset2","abs","cond1","cond2","$5b8ab42334210395$var$constTimeNegate","multiply","point","fake","f1p","f2p","invZ","is0","iz1","iz2","iz3","ax","ay","zz","condition","item","neg","WeakMap","_setWindowSize","delete","hasEvenY","bytes","isShort","$5b8ab42334210395$var$bytesToNumber","subarray","$5b8ab42334210395$var$isValidFieldElement","_6n","_11n","_22n","_23n","_44n","_88n","b3","b6","$5b8ab42334210395$var$pow2","b9","b11","b22","b44","b88","b176","b220","b223","t1","t2","rt","$5b8ab42334210395$var$sqrtMod","isYOdd","assertValidity","$5b8ab42334210395$var$ensureBytes","header","fromCompressedHex","fromUncompressedHex","$5b8ab42334210395$var$normalizePrivateKey","msgHash","signature","recovery","$5b8ab42334210395$var$normalizeSignature","includes","$5b8ab42334210395$var$truncateHash","radj","rinv","u1","u2","R","fromHex","$5b8ab42334210395$var$numTo32bStr","Q","multiplyAndAddUnsafe","toRawBytes","isCompressed","$5b8ab42334210395$var$hexToBytes","toHex","toHexX","toRawX","left","aP","bQ","sum","undefined","$5b8ab42334210395$var$sliceDER","$5b8ab42334210395$var$parseDERInt","$5b8ab42334210395$var$bytesToHex","$5b8ab42334210395$export$848620f5f2f26e86","arr","str","$5b8ab42334210395$var$hexToNumber","sBytes","rBytesLeft","$5b8ab42334210395$var$parseDERSignature","fromDER","$5b8ab42334210395$var$isWithinCurveOrder","hasHighS","HALF","normalizeS","toDERRawBytes","toDERHex","sHex","$5b8ab42334210395$var$numberToHexUnpadded","rHex","sHexL","rHexL","sLen","rLen","toCompactRawBytes","toCompactHex","$5b8ab42334210395$var$concatBytes","arrays","every","pad","$5b8ab42334210395$var$hexes","padStart","uint8a","$5b8ab42334210395$var$POW_2_256","$5b8ab42334210395$var$numTo32b","array","hexByte","byte","isNaN","isSafeInteger","power","number","modulo","u","q","m","hash","truncateOnly","delta","$5b8ab42334210395$var$bits2int_2","$5b8ab42334210395$var$_sha256Sync","$5b8ab42334210395$var$_hmacSha256Sync","$5b8ab42334210395$var$HmacDrbg","hashLen","qByteLen","fill","counter","$5b8ab42334210395$export$eab97d15b1788b8d","hmacSha256","hmacSync","checkSync","incr","seed","reseedSync","out","sl","generateSync","$5b8ab42334210395$var$kmdToSig","kBytes","lowS","kinv","$5b8ab42334210395$var$normalizePublicKey","publicKey","fromCompact","$5b8ab42334210395$export$889def73691f9837","fromPrivateKey","$5b8ab42334210395$var$isProbPub","$5b8ab42334210395$var$compressedLen","$5b8ab42334210395$var$uncompressedLen","$5b8ab42334210395$export$151f26f9d84a2c64","privateA","publicB","$5b8ab42334210395$var$bits2int","$5b8ab42334210395$var$bits2octets","z1","z2","$5b8ab42334210395$var$int2octets","$5b8ab42334210395$var$initSigArgs","extraEntropy","h1","seedArgs","$5b8ab42334210395$var$finalizeSig","recSig","opts","der","recovered","assign","canonical","hashed","$5b8ab42334210395$export$6ff6692656050317","privKey","drbg","$5b8ab42334210395$var$vopts","strict","$5b8ab42334210395$export$532244b5b8b0b4b6","sinv","$5b8ab42334210395$var$schnorrChallengeFinalize","ch","$5b8ab42334210395$var$SchnorrSignature","$5b8ab42334210395$var$InternalSchnorrSignature","auxRand","getScalar","px","rand","priv","initNonce","t0h","finalizeNonce","k0h","k0","rx","finalizeSig","taggedHash","$5b8ab42334210395$var$TAGS","aux","nonce","challenge","$5b8ab42334210395$var$schnorrVerify","calcSync","taggedHashSync","$5b8ab42334210395$var$schnorrVerifySync","$5b8ab42334210395$var$initSchnorrVerify","raw","$5b8ab42334210395$var$finalizeSchnorrVerify","$5b8ab42334210395$export$1f2401df071be9f","Signature","sign","calc","verify","$5b8ab42334210395$var$crypto","node","web","self","$5b8ab42334210395$var$TAGGED_HASH_PREFIXES","isValidPrivateKey","_bigintTo32Bytes","_normalizePrivateKey","hashToPrivateKey","bytesLength","getRandomValues","precompute","cached","messages","digest","createHash","update","ckey","createHmac","tagP","tagH","c","charCodeAt","_JacobianPoint","defineProperties","configurable","val","module","exports","$f26fca237117e8ca$var$Maj","$f26fca237117e8ca$var$SHA256_K","Uint32Array","$f26fca237117e8ca$var$IV","$f26fca237117e8ca$var$SHA256_W","$f26fca237117e8ca$var$SHA256","$lwjBQ","SHA2","G","process","view","getUint32","W15","W2","s0","rotr","s1","T1","T2","roundClean","destroy","wrapConstructor","$faabcc21392de357$var$SHA2","Hash","blockLen","outputLen","padOffset","isLE","finished","pos","destroyed","createView","toBytes","take","dataView","digestInto","byteOffset","setBigUint64","_32n","_u32_max","wh","wl","setUint32","$faabcc21392de357$var$setBigUint64","oview","_cloneInto","wrapConstructorWithOpts","checkOpts","assertHash","assertBytes","assertBool","assertNumber","utf8ToBytes","asyncLoop","nextTick","u32","u8","byteLength","DataView","word","hexes","parseHexByte","nodeRequire","require","bind","setImmediate","iters","tick","ts","Date","now","diff","lengths","init","clone","def","_opts","obj","prototype","call","hashConstructor","hashC","tmp","create","hashCons","$394ou","$3600b4829dff8fa9$export$dfbcecb440255e4a","$3600b4829dff8fa9$var$chain","args","wrap","reverse","$3600b4829dff8fa9$var$alphabet","alphabet","digits","input","letter","$3600b4829dff8fa9$var$join","separator","$3600b4829dff8fa9$var$padding","bits","chr","$3600b4829dff8fa9$var$normalize","fn","$3600b4829dff8fa9$var$convertRadix","carry","done","digit","digitBase","$3600b4829dff8fa9$var$gcd","$3600b4829dff8fa9$var$radix2carry","$3600b4829dff8fa9$var$convertRadix2","padding","$3600b4829dff8fa9$var$radix","$3600b4829dff8fa9$var$radix2","revPadding","$3600b4829dff8fa9$var$unsafeWrapper","apply","$3600b4829dff8fa9$var$checksum","checksum","payload","newChecksum","oldChecksum","$3600b4829dff8fa9$export$eab97d15b1788b8d","$3600b4829dff8fa9$export$586f61c71cb02fe4","$3600b4829dff8fa9$export$4a4d5965e2738b2a","$3600b4829dff8fa9$export$b3b2de96497acc47","toUpperCase","replace","$3600b4829dff8fa9$export$7d21597c7bc64465","$3600b4829dff8fa9$var$genBase58","abc","$3600b4829dff8fa9$export$61f53211c069eefb","$3600b4829dff8fa9$var$XMR_BLOCK_LEN","$3600b4829dff8fa9$export$e86cd8e7f8cff4a6","block","concat","$3600b4829dff8fa9$export$fff625c574161df6","$3600b4829dff8fa9$var$BECH_ALPHABET","$3600b4829dff8fa9$var$POLYMOD_GENERATORS","$3600b4829dff8fa9$var$bech32Polymod","pre","chk","$3600b4829dff8fa9$var$bechChecksum","encodingConst","$3600b4829dff8fa9$var$genBech32","encoding","ENCODING_CONST","_words","fromWordsUnsafe","limit","lowered","toLowerCase","sepIndex","lastIndexOf","endsWith","actualLength","$3600b4829dff8fa9$export$27c42482533637da","$3600b4829dff8fa9$var$CODERS","keys","mnemonicToSeed","entropyToMnemonic","mnemonicToEntropy","$836cf4f0e2c80e2c$var$nfkd","normalize","$836cf4f0e2c80e2c$var$normalize","norm","nfkd","$836cf4f0e2c80e2c$var$assertEntropy","entropy","$dNiq9","default","strength","$836cf4f0e2c80e2c$var$entropyToMnemonic","$3Bcdj","$836cf4f0e2c80e2c$var$calcChecksum","bitsLeft","$6XnWx","$836cf4f0e2c80e2c$var$getCoder","chain","radix2","$836cf4f0e2c80e2c$var$mnemonicToEntropy","$836cf4f0e2c80e2c$var$isJapanese","$836cf4f0e2c80e2c$var$salt","$c2cs5","pbkdf2Async","$3dtER","sha512","dkLen","pbkdf2","$a0ae23f5901291b4$var$number","$a0ae23f5901291b4$var$bool","$a0ae23f5901291b4$var$bytes","$a0ae23f5901291b4$var$hash","$a0ae23f5901291b4$var$exists","instance","checkFinished","$a0ae23f5901291b4$var$output","bool","exists","output","$a0ae23f5901291b4$var$assert","$8c2f54a153cf1baf$var$pbkdf2Init","_password","_salt","asyncTick","password","salt","DK","PRF","$70Xw9","PRFSalt","$8c2f54a153cf1baf$var$pbkdf2Output","prfW","ti","Ti","setInt32","ui","$51b6b372898f65c0$var$HMAC","_key","iHash","oHash","buf","getPrototypeOf","$29ee4d3171d9809b$var$hexes","$29ee4d3171d9809b$var$utf8ToBytes","$29ee4d3171d9809b$var$toBytes","defaults","$2LMAo","$510ad3657d73a9d2$var$Maj","$510ad3657d73a9d2$var$SHA256_K","$510ad3657d73a9d2$var$IV","$510ad3657d73a9d2$var$SHA256_W","$510ad3657d73a9d2$var$SHA256","$g9W9K","$510ad3657d73a9d2$var$SHA224","sha224","$bc3a993d7d38a7a0$var$SHA2","$bc3a993d7d38a7a0$var$setBigUint64","outLen","state","$2579977b4e52adba$var$SHA512_Kh","$2579977b4e52adba$var$SHA512_Kl","$eDgKs","$2579977b4e52adba$var$SHA512_W_H","$2579977b4e52adba$var$SHA512_W_L","$2579977b4e52adba$var$SHA512","Ah","Al","Bh","Bl","Ch","Cl","Dh","Dl","Eh","El","Fh","Fl","Gh","Gl","Hh","Hl","W15h","W15l","s0h","rotrSH","shrSH","s0l","rotrSL","shrSL","W2h","W2l","s1h","rotrBH","s1l","rotrBL","SUMl","add4L","SUMh","add4H","sigma1h","sigma1l","CHIh","CHIl","T1ll","add5L","T1h","add5H","T1l","sigma0h","sigma0l","MAJh","MAJl","All","add3L","add3H","SHA512","$2579977b4e52adba$var$SHA512_224","$2579977b4e52adba$var$SHA512_256","$2579977b4e52adba$var$SHA384","sha512_224","sha512_256","sha384","$aa71b30d36adb919$var$U32_MASK64","$aa71b30d36adb919$var$_32n","$aa71b30d36adb919$var$fromBig","le","$aa71b30d36adb919$var$split","lst","fromBig","toBig","$aa71b30d36adb919$var$add","$aa71b30d36adb919$var$u64","low","$c1c39050bd418416$var$base58check","base58check","$c1c39050bd418416$var$bytesToNumber","$c1c39050bd418416$var$MASTER_SECRET","$c1c39050bd418416$var$BITCOIN_VERSIONS","private","public","$c1c39050bd418416$export$c16360648dc994f8","$c1c39050bd418416$var$toU32","$c1c39050bd418416$export$bb670963070b393a","opt","depth","chainCode","parentFingerprint","versions","privKeyBytes","pubKey","Point","pubHash","$j5xzM","ripemd160","fingerprint","identifier","pubKeyHash","privateExtendedKey","serialize","publicExtendedKey","I","base58key","keyBuffer","keyView","version","isPriv","fromExtendedKey","xpriv","path","test","parts","child","exec","deriveChild","childTweak","added","mod","CURVE","wipePrivateData","toJSON","xpub","$de58877bbb165fd5$var$Rho","$de58877bbb165fd5$var$Id","$de58877bbb165fd5$var$Pi","$de58877bbb165fd5$var$idxL","$de58877bbb165fd5$var$idxR","$de58877bbb165fd5$var$shifts","$de58877bbb165fd5$var$shiftsL","$de58877bbb165fd5$var$shiftsR","$de58877bbb165fd5$var$Kl","$de58877bbb165fd5$var$Kr","$de58877bbb165fd5$var$rotl","$de58877bbb165fd5$var$f","group","$de58877bbb165fd5$var$BUF","$de58877bbb165fd5$var$RIPEMD160","h0","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","el","er","rGroup","hbl","hbr","rl","rr","sr","tl","tr","RIPEMD160","$569375516024e32c$var$HMAC","$9ecda7333d28e490$export$c1e6aefcd4018611","$9ecda7333d28e490$export$9311f797371ee6be","$9ecda7333d28e490$export$15ac20cf0f7a9ce3","$9ecda7333d28e490$export$c325c7c79e11347f","$9ecda7333d28e490$export$2ddbf79600b52486","$8570beae0fc61135$export$8debfa1c82ab7083","privateKeyMaybe","PRIVATE_KEY_STORAGE_KEY","$8570beae0fc61135$export$ad81bd181888e478","$8570beae0fc61135$export$2a0d8442d16eb87c","$8570beae0fc61135$export$889def73691f9837","$8570beae0fc61135$export$b3706df4298b372c","$8570beae0fc61135$export$83b5a15c215259f0","$8570beae0fc61135$export$4245ef63edd990fb","generatePrivateKey","$65f208f69457fc64$export$4640c0d5ffcf906e","plusCode","$lsWS8","getPrivateKey","unsignedEvent","MAP_NOTE_KIND","PLUS_CODE_TAG_KEY","signedEvent","$cscoP","signEventWithPrivateKey","_publish","createNote","$c8d49b3dfb4d9eb7$export$10b7f1a1406a2c1","_date","date","getTime","$c8d49b3dfb4d9eb7$export$3a2b2714b21bdde2","nip26","$c8d49b3dfb4d9eb7$export$7ca3746f7754a690","Kind","Metadata","profileJson","npubPublicKey","$c8d49b3dfb4d9eb7$export$b6c7e2a42b8b23e6","$c8d49b3dfb4d9eb7$export$b5650613eb11eaae","tagArray","$c8d49b3dfb4d9eb7$export$45b40ce3610387d","getEventHash","toSign","signEvent","$c8d49b3dfb4d9eb7$export$f70730c3d1fc524e","$5ee56d9107124990$export$8a934fe97fe14fc","about","publishPromises","$5ee56d9107124990$export$51f5943462af034e","_subscribe","getProfileFromEvent","picture","$483fa7834eeb95b7$var$eventToNote","profiles","baseNote","getTagFirstValueFromEvent","getPublicKeyFromEvent","authorNpubPublicKey","authorPublicKey","$483fa7834eeb95b7$var$eventToNoteMinusProfile","authorName","$483fa7834eeb95b7$export$ec068583843480e7","onNoteReceived","gotNotesEose","getEventsForSpecificAuthor","eventsBaseFilter","eventsFilterWithLimit","noteEvents","noteSubscriptions","note","race","authorsWithDuplicates","uniq","profileFilter","profileSubscriptions"],"version":3,"file":"index.1d4e0afd.js.map"}